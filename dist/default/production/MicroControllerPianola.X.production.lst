

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Dec 11 20:58:30 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000E                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  008C                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0097                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  010C                     	;# 
    73  010E                     	;# 
    74  0111                     	;# 
    75  0112                     	;# 
    76  0113                     	;# 
    77  0114                     	;# 
    78  0115                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  0118                     	;# 
    82  0119                     	;# 
    83  011A                     	;# 
    84  011B                     	;# 
    85  011D                     	;# 
    86  011E                     	;# 
    87  018C                     	;# 
    88  018E                     	;# 
    89  0191                     	;# 
    90  0191                     	;# 
    91  0192                     	;# 
    92  0193                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019C                     	;# 
   103  019D                     	;# 
   104  019E                     	;# 
   105  019F                     	;# 
   106  020C                     	;# 
   107  020E                     	;# 
   108  0211                     	;# 
   109  0211                     	;# 
   110  0212                     	;# 
   111  0212                     	;# 
   112  0213                     	;# 
   113  0213                     	;# 
   114  0214                     	;# 
   115  0214                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0216                     	;# 
   120  0216                     	;# 
   121  0217                     	;# 
   122  0217                     	;# 
   123  0291                     	;# 
   124  0291                     	;# 
   125  0292                     	;# 
   126  0293                     	;# 
   127  0294                     	;# 
   128  0295                     	;# 
   129  0295                     	;# 
   130  0296                     	;# 
   131  0298                     	;# 
   132  0298                     	;# 
   133  0299                     	;# 
   134  029A                     	;# 
   135  029B                     	;# 
   136  029C                     	;# 
   137  029D                     	;# 
   138  029E                     	;# 
   139  0311                     	;# 
   140  0311                     	;# 
   141  0312                     	;# 
   142  0313                     	;# 
   143  0318                     	;# 
   144  0318                     	;# 
   145  0319                     	;# 
   146  031A                     	;# 
   147  038C                     	;# 
   148  038E                     	;# 
   149  0391                     	;# 
   150  0392                     	;# 
   151  0393                     	;# 
   152  039A                     	;# 
   153  039C                     	;# 
   154  039D                     	;# 
   155  039E                     	;# 
   156  039F                     	;# 
   157  0415                     	;# 
   158  0416                     	;# 
   159  0417                     	;# 
   160  041C                     	;# 
   161  041D                     	;# 
   162  041E                     	;# 
   163  0FE4                     	;# 
   164  0FE5                     	;# 
   165  0FE6                     	;# 
   166  0FE7                     	;# 
   167  0FE8                     	;# 
   168  0FE9                     	;# 
   169  0FEA                     	;# 
   170  0FEB                     	;# 
   171  0FED                     	;# 
   172  0FEE                     	;# 
   173  0FEF                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  05DF                     __pidataBANK0:	
   177                           
   178                           ;initializer for _MAX_STEP_SOUND_LENGTH
   179  05DF  340D               	retlw	13
   180  05E0  3400               	retlw	0
   181                           
   182                           ;initializer for _last_pin_touched
   183  05E1  34FF               	retlw	255
   184  05E2  34FF               	retlw	255
   185  001E                     _CPSCON0bits	set	30
   186  001F                     _CPSCON1bits	set	31
   187  000B                     _INTCONbits	set	11
   188  0011                     _PIR1bits	set	17
   189  000E                     _PORTCbits	set	14
   190  001B                     _PR2	set	27
   191  0018                     _T1CON	set	24
   192  0018                     _T1CONbits	set	24
   193  0019                     _T1GCON	set	25
   194  001C                     _T2CON	set	28
   195  0015                     _TMR0	set	21
   196  0017                     _TMR1H	set	23
   197  0016                     _TMR1L	set	22
   198  0095                     _OPTION_REGbits	set	149
   199  0099                     _OSCCON	set	153
   200  009A                     _OSCSTATbits	set	154
   201  008C                     _TRISA	set	140
   202  008E                     _TRISC	set	142
   203  008E                     _TRISCbits	set	142
   204  018C                     _ANSELA	set	396
   205  018E                     _ANSELC	set	398
   206  0293                     _CCP1CON	set	659
   207  0291                     _CCPR1L	set	657
   208  029E                     _CCPTMRSbits	set	670
   209                           
   210                           ; #config settings
   211  0000                     
   212                           	psect	cinit
   213  020B                     start_initialization:	
   214  020B                     __initialization:	
   215                           
   216                           ; Clear objects allocated to COMMON
   217  020B  01F9               	clrf	__pbssCOMMON& (0+127)
   218  020C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   219  020D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   220  020E  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   221                           
   222                           ; Clear objects allocated to BANK0
   223  020F  01DE               	clrf	__pbssBANK0& (0+127)
   224  0210  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   225  0211  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   226  0212  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   227                           
   228                           ; Initialize objects allocated to BANK0
   229  0213  3185  25DF  3182   	fcall	__pidataBANK0	;fetch initializer
   230  0216  00E2               	movwf	__pdataBANK0& (0+127)
   231  0217  3185  25E0  3182   	fcall	__pidataBANK0+1	;fetch initializer
   232  021A  00E3               	movwf	(__pdataBANK0+1)& (0+127)
   233  021B  3185  25E1  3182   	fcall	__pidataBANK0+2	;fetch initializer
   234  021E  00E4               	movwf	(__pdataBANK0+2)& (0+127)
   235  021F  3185  25E2         	fcall	__pidataBANK0+3	;fetch initializer
   236  0221  00E5               	movwf	(__pdataBANK0+3)& (0+127)
   237  0222                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  0222                     __end_of__initialization:	
   241  0222  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   242  0223  0020               	movlb	0
   243  0224  3183  2BD0         	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMMON
   246  0079                     __pbssCOMMON:	
   247  0079                     _new_frequency:	
   248  0079                     	ds	2
   249  007B                     _threshold_frequency:	
   250  007B                     	ds	2
   251                           
   252                           	psect	bssBANK0
   253  005E                     __pbssBANK0:	
   254  005E                     _selected_cps_pin:	
   255  005E                     	ds	2
   256  0060                     _step_count:	
   257  0060                     	ds	2
   258                           
   259                           	psect	dataBANK0
   260  0062                     __pdataBANK0:	
   261  0062                     _MAX_STEP_SOUND_LENGTH:	
   262  0062                     	ds	2
   263  0064                     _last_pin_touched:	
   264  0064                     	ds	2
   265                           
   266                           	psect	cstackCOMMON
   267  0070                     __pcstackCOMMON:	
   268  0070                     ?_waitTimer2:	
   269  0070                     ??_waitTimer2:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_enableCCP1Out:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ??_enableCCP1Out:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_disableCCP1Out:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ??_disableCCP1Out:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_lightLed:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ??_lightLed:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_disableLed:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ??_disableLed:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_finishNote:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ??_finishNote:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_isr:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_main:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?___awmod:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ___awmod@divisor:	
   312                           ; 2 bytes @ 0x0
   313                           
   314                           
   315                           ; 2 bytes @ 0x0
   316  0070                     	ds	2
   317  0072                     ___awmod@dividend:	
   318                           
   319                           ; 2 bytes @ 0x2
   320  0072                     	ds	2
   321  0074                     ??___awmod:	
   322                           
   323                           ; 0 bytes @ 0x4
   324  0074                     	ds	1
   325  0075                     ___awmod@counter:	
   326                           
   327                           ; 1 bytes @ 0x5
   328  0075                     	ds	1
   329  0076                     ___awmod@sign:	
   330                           
   331                           ; 1 bytes @ 0x6
   332  0076                     	ds	1
   333  0077                     ??_isr:	
   334                           
   335                           ; 0 bytes @ 0x7
   336  0077                     	ds	2
   337                           
   338                           	psect	cstackBANK0
   339  0020                     __pcstackBANK0:	
   340  0020                     ?___ftpack:	
   341  0020                     ___ftpack@arg:	
   342                           ; 3 bytes @ 0x0
   343                           
   344                           
   345                           ; 3 bytes @ 0x0
   346  0020                     	ds	3
   347  0023                     ___ftpack@exp:	
   348                           
   349                           ; 1 bytes @ 0x3
   350  0023                     	ds	1
   351  0024                     ___ftpack@sign:	
   352                           
   353                           ; 1 bytes @ 0x4
   354  0024                     	ds	1
   355  0025                     ??___ftpack:	
   356                           
   357                           ; 0 bytes @ 0x5
   358  0025                     	ds	3
   359  0028                     ?___awtoft:	
   360  0028                     ?___ftmul:	
   361                           ; 3 bytes @ 0x8
   362                           
   363  0028                     ___awtoft@c:	
   364                           ; 3 bytes @ 0x8
   365                           
   366  0028                     ___ftmul@f1:	
   367                           ; 2 bytes @ 0x8
   368                           
   369                           
   370                           ; 3 bytes @ 0x8
   371  0028                     	ds	3
   372  002B                     ??___awtoft:	
   373  002B                     ___ftmul@f2:	
   374                           ; 0 bytes @ 0xB
   375                           
   376                           
   377                           ; 3 bytes @ 0xB
   378  002B                     	ds	2
   379  002D                     ___awtoft@sign:	
   380                           
   381                           ; 1 bytes @ 0xD
   382  002D                     	ds	1
   383  002E                     ??___ftmul:	
   384                           
   385                           ; 0 bytes @ 0xE
   386  002E                     	ds	4
   387  0032                     ___ftmul@exp:	
   388                           
   389                           ; 1 bytes @ 0x12
   390  0032                     	ds	1
   391  0033                     ___ftmul@f3_as_product:	
   392                           
   393                           ; 3 bytes @ 0x13
   394  0033                     	ds	3
   395  0036                     ___ftmul@cntr:	
   396                           
   397                           ; 1 bytes @ 0x16
   398  0036                     	ds	1
   399  0037                     ___ftmul@sign:	
   400                           
   401                           ; 1 bytes @ 0x17
   402  0037                     	ds	1
   403  0038                     ?___ftneg:	
   404  0038                     ___ftneg@f1:	
   405                           ; 3 bytes @ 0x18
   406                           
   407                           
   408                           ; 3 bytes @ 0x18
   409  0038                     	ds	3
   410  003B                     ??___ftneg:	
   411  003B                     ?___ftadd:	
   412                           ; 0 bytes @ 0x1B
   413                           
   414  003B                     ___ftadd@f1:	
   415                           ; 3 bytes @ 0x1B
   416                           
   417                           
   418                           ; 3 bytes @ 0x1B
   419  003B                     	ds	3
   420  003E                     ___ftadd@f2:	
   421                           
   422                           ; 3 bytes @ 0x1E
   423  003E                     	ds	3
   424  0041                     ??___ftadd:	
   425                           
   426                           ; 0 bytes @ 0x21
   427  0041                     	ds	4
   428  0045                     ___ftadd@sign:	
   429                           
   430                           ; 1 bytes @ 0x25
   431  0045                     	ds	1
   432  0046                     ___ftadd@exp2:	
   433                           
   434                           ; 1 bytes @ 0x26
   435  0046                     	ds	1
   436  0047                     ___ftadd@exp1:	
   437                           
   438                           ; 1 bytes @ 0x27
   439  0047                     	ds	1
   440  0048                     ?___fttol:	
   441  0048                     ___fttol@f1:	
   442                           ; 4 bytes @ 0x28
   443                           
   444                           
   445                           ; 3 bytes @ 0x28
   446  0048                     	ds	4
   447  004C                     ??___fttol:	
   448                           
   449                           ; 0 bytes @ 0x2C
   450  004C                     	ds	4
   451  0050                     ___fttol@sign1:	
   452                           
   453                           ; 1 bytes @ 0x30
   454  0050                     	ds	1
   455  0051                     ___fttol@lval:	
   456                           
   457                           ; 4 bytes @ 0x31
   458  0051                     	ds	4
   459  0055                     ___fttol@exp1:	
   460                           
   461                           ; 1 bytes @ 0x35
   462  0055                     	ds	1
   463  0056                     ??_main:	
   464                           
   465                           ; 0 bytes @ 0x36
   466  0056                     	ds	5
   467  005B                     main@cps_frequency:	
   468                           
   469                           ; 3 bytes @ 0x3B
   470  005B                     	ds	3
   471                           
   472                           	psect	maintext
   473  03D0                     __pmaintext:	
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 341 in file "mainSrc.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  cps_frequenc    3   59[BANK0 ] float 
   484 ;; Return value:  Size  Location     Type
   485 ;;		None               void
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B1F/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   494 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   495 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   496 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   497 ;;Total ram usage:        8 bytes
   498 ;; Hardware stack levels required when called:    5
   499 ;; This function calls:
   500 ;;		___awtoft
   501 ;;		___ftadd
   502 ;;		___ftmul
   503 ;;		___ftneg
   504 ;;		___fttol
   505 ;; This function is called by:
   506 ;;		Startup code after reset
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _main
   512  03D0                     _main:	
   513                           
   514                           ;mainSrc.c: 343: float cps_frequency = 0;
   515                           
   516                           ;incstack = 0
   517                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   518  03D0  3000               	movlw	0
   519  03D1  0020               	movlb	0	; select bank0
   520  03D2  00DB               	movwf	main@cps_frequency
   521  03D3  3000               	movlw	0
   522  03D4  00DC               	movwf	main@cps_frequency+1
   523  03D5  3000               	movlw	0
   524  03D6  00DD               	movwf	main@cps_frequency+2
   525                           
   526                           ;mainSrc.c: 346: OSCCON = 0b01111000;
   527  03D7  3078               	movlw	120
   528  03D8  0021               	movlb	1	; select bank1
   529  03D9  0099               	movwf	25	;volatile
   530  03DA                     l125:	
   531                           ;mainSrc.c: 347: while(OSCSTATbits.HFIOFR == 0){ continue; }
   532                           
   533  03DA  1E1A               	btfss	26,4	;volatile
   534  03DB  2BDA               	goto	l125
   535                           
   536                           ;mainSrc.c: 350: TRISA = 0b00010111;
   537  03DC  3017               	movlw	23
   538  03DD  008C               	movwf	12	;volatile
   539                           
   540                           ;mainSrc.c: 352: ANSELA = 0b00010111;
   541  03DE  3017               	movlw	23
   542  03DF  0023               	movlb	3	; select bank3
   543  03E0  008C               	movwf	12	;volatile
   544                           
   545                           ;mainSrc.c: 354: TRISC = 0b00000111;
   546  03E1  3007               	movlw	7
   547  03E2  0021               	movlb	1	; select bank1
   548  03E3  008E               	movwf	14	;volatile
   549                           
   550                           ;mainSrc.c: 355: ANSELC = 0b00000111;
   551  03E4  3007               	movlw	7
   552  03E5  0023               	movlb	3	; select bank3
   553  03E6  008E               	movwf	14	;volatile
   554                           
   555                           ;mainSrc.c: 363: OPTION_REGbits.TMR0CS = 0;
   556  03E7  0021               	movlb	1	; select bank1
   557  03E8  1295               	bcf	21,5	;volatile
   558                           
   559                           ;mainSrc.c: 364: OPTION_REGbits.PSA = 0;
   560  03E9  1195               	bcf	21,3	;volatile
   561                           
   562                           ;mainSrc.c: 365: OPTION_REGbits.PS = 0b111;
   563  03EA  3007               	movlw	7
   564  03EB  0495               	iorwf	21,f	;volatile
   565                           
   566                           ;mainSrc.c: 369: T1CON = 0b11000101 ;
   567  03EC  30C5               	movlw	197
   568  03ED  0020               	movlb	0	; select bank0
   569  03EE  0098               	movwf	24	;volatile
   570                           
   571                           ;mainSrc.c: 371: T1GCON = 0b00000000;
   572  03EF  0199               	clrf	25	;volatile
   573                           
   574                           ;mainSrc.c: 373: CPSCON0bits.CPSRM = 0;
   575  03F0  131E               	bcf	30,6	;volatile
   576                           
   577                           ;mainSrc.c: 374: CPSCON0bits.CPSRNG = 0b10;
   578  03F1  081E               	movf	30,w	;volatile
   579  03F2  39F3               	andlw	-13
   580  03F3  3808               	iorlw	8
   581  03F4  009E               	movwf	30	;volatile
   582                           
   583                           ;mainSrc.c: 375: CPSCON0bits.CPSON = 1;
   584  03F5  179E               	bsf	30,7	;volatile
   585                           
   586                           ;mainSrc.c: 376: CPSCON1bits.CPSCH = 0b0010;
   587  03F6  081F               	movf	31,w	;volatile
   588  03F7  39F8               	andlw	-8
   589  03F8  3802               	iorlw	2
   590  03F9  009F               	movwf	31	;volatile
   591                           
   592                           ;mainSrc.c: 379: T1CONbits.TMR1ON = 0;
   593  03FA  1018               	bcf	24,0	;volatile
   594                           
   595                           ;mainSrc.c: 380: TMR1L = 0;
   596  03FB  0196               	clrf	22	;volatile
   597                           
   598                           ;mainSrc.c: 381: TMR0 = 0;
   599  03FC  0195               	clrf	21	;volatile
   600                           
   601                           ;mainSrc.c: 382: TMR1H = 0;
   602  03FD  0197               	clrf	23	;volatile
   603                           
   604                           ;mainSrc.c: 383: T1CONbits.TMR1ON = 1;
   605  03FE  1418               	bsf	24,0	;volatile
   606                           
   607                           ;mainSrc.c: 384: INTCONbits.TMR0IF = 0;
   608  03FF  110B               	bcf	11,2	;volatile
   609  0400                     l128:	
   610                           ;mainSrc.c: 386: while(INTCONbits.TMR0IF == 0){ continue; }
   611                           
   612  0400  1D0B               	btfss	11,2	;volatile
   613  0401  2C00               	goto	l128
   614                           
   615                           ;mainSrc.c: 387: cps_frequency = ((TMR1H << 8) + TMR1L);
   616  0402  0020               	movlb	0	; select bank0
   617  0403  0816               	movf	22,w	;volatile
   618  0404  00D6               	movwf	??_main
   619  0405  01D7               	clrf	??_main+1
   620  0406  0817               	movf	23,w	;volatile
   621  0407  00D8               	movwf	??_main+2
   622  0408  01D9               	clrf	??_main+3
   623  0409  0858               	movf	??_main+2,w
   624  040A  00D9               	movwf	??_main+3
   625  040B  01D8               	clrf	??_main+2
   626  040C  0856               	movf	??_main,w
   627  040D  0758               	addwf	??_main+2,w
   628  040E  00A8               	movwf	___awtoft@c
   629  040F  0857               	movf	??_main+1,w
   630  0410  3D59               	addwfc	??_main+3,w
   631  0411  00A9               	movwf	___awtoft@c+1
   632  0412  3185  2594  3183   	fcall	___awtoft
   633  0415  0020               	movlb	0	; select bank0
   634  0416  0828               	movf	?___awtoft,w
   635  0417  00DB               	movwf	main@cps_frequency
   636  0418  0829               	movf	?___awtoft+1,w
   637  0419  00DC               	movwf	main@cps_frequency+1
   638  041A  082A               	movf	?___awtoft+2,w
   639  041B  00DD               	movwf	main@cps_frequency+2
   640                           
   641                           ;mainSrc.c: 391: threshold_frequency = (int)(cps_frequency - cps_frequency*0.2);
   642  041C  085B               	movf	main@cps_frequency,w
   643  041D  00AB               	movwf	___ftmul@f2
   644  041E  085C               	movf	main@cps_frequency+1,w
   645  041F  00AC               	movwf	___ftmul@f2+1
   646  0420  085D               	movf	main@cps_frequency+2,w
   647  0421  00AD               	movwf	___ftmul@f2+2
   648  0422  30CD               	movlw	205
   649  0423  00A8               	movwf	___ftmul@f1
   650  0424  304C               	movlw	76
   651  0425  00A9               	movwf	___ftmul@f1+1
   652  0426  303E               	movlw	62
   653  0427  00AA               	movwf	___ftmul@f1+2
   654  0428  3183  231C  3183   	fcall	___ftmul
   655  042B  0020               	movlb	0	; select bank0
   656  042C  0828               	movf	?___ftmul,w
   657  042D  00B8               	movwf	___ftneg@f1
   658  042E  0829               	movf	?___ftmul+1,w
   659  042F  00B9               	movwf	___ftneg@f1+1
   660  0430  082A               	movf	?___ftmul+2,w
   661  0431  00BA               	movwf	___ftneg@f1+2
   662  0432  3185  25D1  3183   	fcall	___ftneg
   663  0435  0020               	movlb	0	; select bank0
   664  0436  0838               	movf	?___ftneg,w
   665  0437  00BE               	movwf	___ftadd@f2
   666  0438  0839               	movf	?___ftneg+1,w
   667  0439  00BF               	movwf	___ftadd@f2+1
   668  043A  083A               	movf	?___ftneg+2,w
   669  043B  00C0               	movwf	___ftadd@f2+2
   670  043C  085B               	movf	main@cps_frequency,w
   671  043D  00BB               	movwf	___ftadd@f1
   672  043E  085C               	movf	main@cps_frequency+1,w
   673  043F  00BC               	movwf	___ftadd@f1+1
   674  0440  085D               	movf	main@cps_frequency+2,w
   675  0441  00BD               	movwf	___ftadd@f1+2
   676  0442  3182  2226  3183   	fcall	___ftadd
   677  0445  0020               	movlb	0	; select bank0
   678  0446  083B               	movf	?___ftadd,w
   679  0447  00C8               	movwf	___fttol@f1
   680  0448  083C               	movf	?___ftadd+1,w
   681  0449  00C9               	movwf	___fttol@f1+1
   682  044A  083D               	movf	?___ftadd+2,w
   683  044B  00CA               	movwf	___fttol@f1+2
   684  044C  3184  2463  3183   	fcall	___fttol
   685  044F  0020               	movlb	0	; select bank0
   686  0450  0849               	movf	?___fttol+1,w
   687  0451  00FC               	movwf	_threshold_frequency+1
   688  0452  0848               	movf	?___fttol,w
   689  0453  00FB               	movwf	_threshold_frequency
   690                           
   691                           ;mainSrc.c: 400: T2CON = 0b00000111;
   692  0454  3007               	movlw	7
   693  0455  009C               	movwf	28	;volatile
   694                           
   695                           ;mainSrc.c: 401: CCPTMRSbits.C1TSEL = 0b00;
   696  0456  30FC               	movlw	-4
   697  0457  0025               	movlb	5	; select bank5
   698  0458  059E               	andwf	30,f	;volatile
   699                           
   700                           ;mainSrc.c: 404: T1CONbits.TMR1ON = 0;
   701  0459  0020               	movlb	0	; select bank0
   702  045A  1018               	bcf	24,0	;volatile
   703                           
   704                           ;mainSrc.c: 405: TMR1L = 0;
   705  045B  0196               	clrf	22	;volatile
   706                           
   707                           ;mainSrc.c: 406: TMR0 = 0;
   708  045C  0195               	clrf	21	;volatile
   709                           
   710                           ;mainSrc.c: 407: TMR1H = 0;
   711  045D  0197               	clrf	23	;volatile
   712                           
   713                           ;mainSrc.c: 408: T1CONbits.TMR1ON = 1;
   714  045E  1418               	bsf	24,0	;volatile
   715                           
   716                           ;mainSrc.c: 409: INTCONbits.TMR0IF = 0;
   717  045F  110B               	bcf	11,2	;volatile
   718                           
   719                           ;mainSrc.c: 411: INTCONbits.TMR0IE = 1;
   720  0460  168B               	bsf	11,5	;volatile
   721                           
   722                           ;mainSrc.c: 412: INTCONbits.GIE = 1;
   723  0461  178B               	bsf	11,7	;volatile
   724  0462                     l131:	
   725                           ;mainSrc.c: 415: for(;;){}
   726                           
   727  0462  2C62               	goto	l131
   728  0463                     __end_of_main:	
   729                           
   730                           	psect	text1
   731  0463                     __ptext1:	
   732 ;; *************** function ___fttol *****************
   733 ;; Defined at:
   734 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  f1              3   40[BANK0 ] float 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  lval            4   49[BANK0 ] unsigned long 
   739 ;;  exp1            1   53[BANK0 ] unsigned char 
   740 ;;  sign1           1   48[BANK0 ] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  4   40[BANK0 ] long 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   751 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   753 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
   754 ;;Total ram usage:       14 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    3
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function ___fttol
   766  0463                     ___fttol:	
   767                           
   768                           ;incstack = 0
   769                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   770  0463  0020               	movlb	0	; select bank0
   771  0464  0848               	movf	___fttol@f1,w
   772  0465  00CC               	movwf	??___fttol
   773  0466  0849               	movf	___fttol@f1+1,w
   774  0467  00CD               	movwf	??___fttol+1
   775  0468  084A               	movf	___fttol@f1+2,w
   776  0469  00CE               	movwf	??___fttol+2
   777  046A  1003               	clrc
   778  046B  0D4D               	rlf	??___fttol+1,w
   779  046C  0D4E               	rlf	??___fttol+2,w
   780  046D  00CF               	movwf	??___fttol+3
   781  046E  084F               	movf	??___fttol+3,w
   782  046F  00D5               	movwf	___fttol@exp1
   783  0470  0855               	movf	___fttol@exp1,w
   784  0471  1D03               	btfss	3,2
   785  0472  2C7C               	goto	l1409
   786  0473  3000               	movlw	0
   787  0474  00CB               	movwf	?___fttol+3
   788  0475  3000               	movlw	0
   789  0476  00CA               	movwf	?___fttol+2
   790  0477  3000               	movlw	0
   791  0478  00C9               	movwf	?___fttol+1
   792  0479  3000               	movlw	0
   793  047A  00C8               	movwf	?___fttol
   794  047B  0008               	return
   795  047C                     l1409:	
   796  047C  0848               	movf	___fttol@f1,w
   797  047D  00CC               	movwf	??___fttol
   798  047E  0849               	movf	___fttol@f1+1,w
   799  047F  00CD               	movwf	??___fttol+1
   800  0480  084A               	movf	___fttol@f1+2,w
   801  0481  00CE               	movwf	??___fttol+2
   802  0482  3017               	movlw	23
   803  0483                     u1545:	
   804  0483  36CE               	lsrf	??___fttol+2,f
   805  0484  0CCD               	rrf	??___fttol+1,f
   806  0485  0CCC               	rrf	??___fttol,f
   807  0486  0B89               	decfsz	9,f
   808  0487  2C83               	goto	u1545
   809  0488  084C               	movf	??___fttol,w
   810  0489  00CF               	movwf	??___fttol+3
   811  048A  084F               	movf	??___fttol+3,w
   812  048B  00D0               	movwf	___fttol@sign1
   813  048C  17C9               	bsf	___fttol@f1+1,7
   814  048D  30FF               	movlw	255
   815  048E  05C8               	andwf	___fttol@f1,f
   816  048F  30FF               	movlw	255
   817  0490  05C9               	andwf	___fttol@f1+1,f
   818  0491  3000               	movlw	0
   819  0492  05CA               	andwf	___fttol@f1+2,f
   820  0493  0848               	movf	___fttol@f1,w
   821  0494  00D1               	movwf	___fttol@lval
   822  0495  0849               	movf	___fttol@f1+1,w
   823  0496  00D2               	movwf	___fttol@lval+1
   824  0497  084A               	movf	___fttol@f1+2,w
   825  0498  00D3               	movwf	___fttol@lval+2
   826  0499  01D4               	clrf	___fttol@lval+3
   827  049A  308E               	movlw	142
   828  049B  02D5               	subwf	___fttol@exp1,f
   829  049C  1FD5               	btfss	___fttol@exp1,7
   830  049D  2CBA               	goto	l1429
   831  049E  0855               	movf	___fttol@exp1,w
   832  049F  3A80               	xorlw	128
   833  04A0  3E8F               	addlw	143
   834  04A1  1803               	skipnc
   835  04A2  2CAC               	goto	l1427
   836  04A3  3000               	movlw	0
   837  04A4  00CB               	movwf	?___fttol+3
   838  04A5  3000               	movlw	0
   839  04A6  00CA               	movwf	?___fttol+2
   840  04A7  3000               	movlw	0
   841  04A8  00C9               	movwf	?___fttol+1
   842  04A9  3000               	movlw	0
   843  04AA  00C8               	movwf	?___fttol
   844  04AB  0008               	return
   845  04AC                     l1427:	
   846  04AC  3001               	movlw	1
   847  04AD                     u1575:	
   848  04AD  36D4               	lsrf	___fttol@lval+3,f
   849  04AE  0CD3               	rrf	___fttol@lval+2,f
   850  04AF  0CD2               	rrf	___fttol@lval+1,f
   851  04B0  0CD1               	rrf	___fttol@lval,f
   852  04B1  0B89               	decfsz	9,f
   853  04B2  2CAD               	goto	u1575
   854  04B3  3001               	movlw	1
   855  04B4  00CC               	movwf	??___fttol
   856  04B5  084C               	movf	??___fttol,w
   857  04B6  07D5               	addwf	___fttol@exp1,f
   858  04B7  1903               	btfsc	3,2
   859  04B8  2CD3               	goto	l1437
   860  04B9  2CAC               	goto	l1427
   861  04BA                     l1429:	
   862  04BA  3018               	movlw	24
   863  04BB  0255               	subwf	___fttol@exp1,w
   864  04BC  1C03               	skipc
   865  04BD  2CD0               	goto	l469
   866  04BE  3000               	movlw	0
   867  04BF  00CB               	movwf	?___fttol+3
   868  04C0  3000               	movlw	0
   869  04C1  00CA               	movwf	?___fttol+2
   870  04C2  3000               	movlw	0
   871  04C3  00C9               	movwf	?___fttol+1
   872  04C4  3000               	movlw	0
   873  04C5  00C8               	movwf	?___fttol
   874  04C6  0008               	return
   875  04C7                     l1435:	
   876  04C7  3001               	movlw	1
   877  04C8                     u1605:	
   878  04C8  35D1               	lslf	___fttol@lval,f
   879  04C9  0DD2               	rlf	___fttol@lval+1,f
   880  04CA  0DD3               	rlf	___fttol@lval+2,f
   881  04CB  0DD4               	rlf	___fttol@lval+3,f
   882  04CC  0B89               	decfsz	9,f
   883  04CD  2CC8               	goto	u1605
   884  04CE  3001               	movlw	1
   885  04CF  02D5               	subwf	___fttol@exp1,f
   886  04D0                     l469:	
   887  04D0  0855               	movf	___fttol@exp1,w
   888  04D1  1D03               	btfss	3,2
   889  04D2  2CC7               	goto	l1435
   890  04D3                     l1437:	
   891  04D3  0850               	movf	___fttol@sign1,w
   892  04D4  1903               	btfsc	3,2
   893  04D5  2CE1               	goto	l1441
   894  04D6  09D1               	comf	___fttol@lval,f
   895  04D7  09D2               	comf	___fttol@lval+1,f
   896  04D8  09D3               	comf	___fttol@lval+2,f
   897  04D9  09D4               	comf	___fttol@lval+3,f
   898  04DA  0AD1               	incf	___fttol@lval,f
   899  04DB  1903               	skipnz
   900  04DC  0AD2               	incf	___fttol@lval+1,f
   901  04DD  1903               	skipnz
   902  04DE  0AD3               	incf	___fttol@lval+2,f
   903  04DF  1903               	skipnz
   904  04E0  0AD4               	incf	___fttol@lval+3,f
   905  04E1                     l1441:	
   906  04E1  0854               	movf	___fttol@lval+3,w
   907  04E2  00CB               	movwf	?___fttol+3
   908  04E3  0853               	movf	___fttol@lval+2,w
   909  04E4  00CA               	movwf	?___fttol+2
   910  04E5  0852               	movf	___fttol@lval+1,w
   911  04E6  00C9               	movwf	?___fttol+1
   912  04E7  0851               	movf	___fttol@lval,w
   913  04E8  00C8               	movwf	?___fttol
   914  04E9  0008               	return
   915  04EA                     __end_of___fttol:	
   916                           
   917                           	psect	text2
   918  05D1                     __ptext2:	
   919 ;; *************** function ___ftneg *****************
   920 ;; Defined at:
   921 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  f1              3   24[BANK0 ] float 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  3   24[BANK0 ] float 
   928 ;; Registers used:
   929 ;;		wreg
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   935 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   938 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   939 ;;Total ram usage:        3 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    3
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function ___ftneg
   951  05D1                     ___ftneg:	
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in ___ftneg: [wreg]
   955  05D1  0020               	movlb	0	; select bank0
   956  05D2  083A               	movf	___ftneg@f1+2,w
   957  05D3  0439               	iorwf	___ftneg@f1+1,w
   958  05D4  0438               	iorwf	___ftneg@f1,w
   959  05D5  1903               	skipnz
   960  05D6  0008               	return
   961  05D7  3080               	movlw	128
   962  05D8  06BA               	xorwf	___ftneg@f1+2,f
   963  05D9  0008               	return
   964  05DA                     __end_of___ftneg:	
   965                           
   966                           	psect	text3
   967  031C                     __ptext3:	
   968 ;; *************** function ___ftmul *****************
   969 ;; Defined at:
   970 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  f1              3    8[BANK0 ] float 
   973 ;;  f2              3   11[BANK0 ] float 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
   976 ;;  sign            1   23[BANK0 ] unsigned char 
   977 ;;  cntr            1   22[BANK0 ] unsigned char 
   978 ;;  exp             1   18[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  3    8[BANK0 ] float 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   988 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   989 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   991 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
   992 ;;Total ram usage:       16 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    4
   995 ;; This function calls:
   996 ;;		___ftpack
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function ___ftmul
  1004  031C                     ___ftmul:	
  1005                           
  1006                           ;incstack = 0
  1007                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1008  031C  0020               	movlb	0	; select bank0
  1009  031D  0828               	movf	___ftmul@f1,w
  1010  031E  00AE               	movwf	??___ftmul
  1011  031F  0829               	movf	___ftmul@f1+1,w
  1012  0320  00AF               	movwf	??___ftmul+1
  1013  0321  082A               	movf	___ftmul@f1+2,w
  1014  0322  00B0               	movwf	??___ftmul+2
  1015  0323  1003               	clrc
  1016  0324  0D2F               	rlf	??___ftmul+1,w
  1017  0325  0D30               	rlf	??___ftmul+2,w
  1018  0326  00B1               	movwf	??___ftmul+3
  1019  0327  0831               	movf	??___ftmul+3,w
  1020  0328  00B2               	movwf	___ftmul@exp
  1021  0329  0832               	movf	___ftmul@exp,w
  1022  032A  1D03               	btfss	3,2
  1023  032B  2B33               	goto	l1351
  1024  032C  3000               	movlw	0
  1025  032D  00A8               	movwf	?___ftmul
  1026  032E  3000               	movlw	0
  1027  032F  00A9               	movwf	?___ftmul+1
  1028  0330  3000               	movlw	0
  1029  0331  00AA               	movwf	?___ftmul+2
  1030  0332  0008               	return
  1031  0333                     l1351:	
  1032  0333  082B               	movf	___ftmul@f2,w
  1033  0334  00AE               	movwf	??___ftmul
  1034  0335  082C               	movf	___ftmul@f2+1,w
  1035  0336  00AF               	movwf	??___ftmul+1
  1036  0337  082D               	movf	___ftmul@f2+2,w
  1037  0338  00B0               	movwf	??___ftmul+2
  1038  0339  1003               	clrc
  1039  033A  0D2F               	rlf	??___ftmul+1,w
  1040  033B  0D30               	rlf	??___ftmul+2,w
  1041  033C  00B1               	movwf	??___ftmul+3
  1042  033D  0831               	movf	??___ftmul+3,w
  1043  033E  00B7               	movwf	___ftmul@sign
  1044  033F  0837               	movf	___ftmul@sign,w
  1045  0340  1D03               	btfss	3,2
  1046  0341  2B49               	goto	l1357
  1047  0342  3000               	movlw	0
  1048  0343  00A8               	movwf	?___ftmul
  1049  0344  3000               	movlw	0
  1050  0345  00A9               	movwf	?___ftmul+1
  1051  0346  3000               	movlw	0
  1052  0347  00AA               	movwf	?___ftmul+2
  1053  0348  0008               	return
  1054  0349                     l1357:	
  1055  0349  0837               	movf	___ftmul@sign,w
  1056  034A  3E7B               	addlw	123
  1057  034B  00AE               	movwf	??___ftmul
  1058  034C  082E               	movf	??___ftmul,w
  1059  034D  07B2               	addwf	___ftmul@exp,f
  1060  034E  0828               	movf	___ftmul@f1,w
  1061  034F  00AE               	movwf	??___ftmul
  1062  0350  0829               	movf	___ftmul@f1+1,w
  1063  0351  00AF               	movwf	??___ftmul+1
  1064  0352  082A               	movf	___ftmul@f1+2,w
  1065  0353  00B0               	movwf	??___ftmul+2
  1066  0354  3010               	movlw	16
  1067  0355                     u1425:	
  1068  0355  36B0               	lsrf	??___ftmul+2,f
  1069  0356  0CAF               	rrf	??___ftmul+1,f
  1070  0357  0CAE               	rrf	??___ftmul,f
  1071  0358  0B89               	decfsz	9,f
  1072  0359  2B55               	goto	u1425
  1073  035A  082E               	movf	??___ftmul,w
  1074  035B  00B1               	movwf	??___ftmul+3
  1075  035C  0831               	movf	??___ftmul+3,w
  1076  035D  00B7               	movwf	___ftmul@sign
  1077  035E  082B               	movf	___ftmul@f2,w
  1078  035F  00AE               	movwf	??___ftmul
  1079  0360  082C               	movf	___ftmul@f2+1,w
  1080  0361  00AF               	movwf	??___ftmul+1
  1081  0362  082D               	movf	___ftmul@f2+2,w
  1082  0363  00B0               	movwf	??___ftmul+2
  1083  0364  3010               	movlw	16
  1084  0365                     u1435:	
  1085  0365  36B0               	lsrf	??___ftmul+2,f
  1086  0366  0CAF               	rrf	??___ftmul+1,f
  1087  0367  0CAE               	rrf	??___ftmul,f
  1088  0368  0B89               	decfsz	9,f
  1089  0369  2B65               	goto	u1435
  1090  036A  082E               	movf	??___ftmul,w
  1091  036B  00B1               	movwf	??___ftmul+3
  1092  036C  0831               	movf	??___ftmul+3,w
  1093  036D  06B7               	xorwf	___ftmul@sign,f
  1094  036E  3080               	movlw	128
  1095  036F  00AE               	movwf	??___ftmul
  1096  0370  082E               	movf	??___ftmul,w
  1097  0371  05B7               	andwf	___ftmul@sign,f
  1098  0372  17A9               	bsf	___ftmul@f1+1,7
  1099  0373  17AC               	bsf	___ftmul@f2+1,7
  1100  0374  30FF               	movlw	255
  1101  0375  05AB               	andwf	___ftmul@f2,f
  1102  0376  30FF               	movlw	255
  1103  0377  05AC               	andwf	___ftmul@f2+1,f
  1104  0378  3000               	movlw	0
  1105  0379  05AD               	andwf	___ftmul@f2+2,f
  1106  037A  3000               	movlw	0
  1107  037B  00B3               	movwf	___ftmul@f3_as_product
  1108  037C  3000               	movlw	0
  1109  037D  00B4               	movwf	___ftmul@f3_as_product+1
  1110  037E  3000               	movlw	0
  1111  037F  00B5               	movwf	___ftmul@f3_as_product+2
  1112  0380  3007               	movlw	7
  1113  0381  00AE               	movwf	??___ftmul
  1114  0382  082E               	movf	??___ftmul,w
  1115  0383  00B6               	movwf	___ftmul@cntr
  1116  0384                     l1369:	
  1117  0384  1C28               	btfss	___ftmul@f1,0
  1118  0385  2B8C               	goto	l1373
  1119  0386  082B               	movf	___ftmul@f2,w
  1120  0387  07B3               	addwf	___ftmul@f3_as_product,f
  1121  0388  082C               	movf	___ftmul@f2+1,w
  1122  0389  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  1123  038A  082D               	movf	___ftmul@f2+2,w
  1124  038B  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  1125  038C                     l1373:	
  1126  038C  3001               	movlw	1
  1127  038D                     u1455:	
  1128  038D  36AA               	lsrf	___ftmul@f1+2,f
  1129  038E  0CA9               	rrf	___ftmul@f1+1,f
  1130  038F  0CA8               	rrf	___ftmul@f1,f
  1131  0390  0B89               	decfsz	9,f
  1132  0391  2B8D               	goto	u1455
  1133  0392  3001               	movlw	1
  1134  0393                     u1465:	
  1135  0393  35AB               	lslf	___ftmul@f2,f
  1136  0394  0DAC               	rlf	___ftmul@f2+1,f
  1137  0395  0DAD               	rlf	___ftmul@f2+2,f
  1138  0396  0B89               	decfsz	9,f
  1139  0397  2B93               	goto	u1465
  1140  0398  3001               	movlw	1
  1141  0399  02B6               	subwf	___ftmul@cntr,f
  1142  039A  1D03               	btfss	3,2
  1143  039B  2B84               	goto	l1369
  1144  039C  3009               	movlw	9
  1145  039D  00AE               	movwf	??___ftmul
  1146  039E  082E               	movf	??___ftmul,w
  1147  039F  00B6               	movwf	___ftmul@cntr
  1148  03A0                     l1381:	
  1149  03A0  1C28               	btfss	___ftmul@f1,0
  1150  03A1  2BA8               	goto	l1385
  1151  03A2  082B               	movf	___ftmul@f2,w
  1152  03A3  07B3               	addwf	___ftmul@f3_as_product,f
  1153  03A4  082C               	movf	___ftmul@f2+1,w
  1154  03A5  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  1155  03A6  082D               	movf	___ftmul@f2+2,w
  1156  03A7  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  1157  03A8                     l1385:	
  1158  03A8  3001               	movlw	1
  1159  03A9                     u1495:	
  1160  03A9  36AA               	lsrf	___ftmul@f1+2,f
  1161  03AA  0CA9               	rrf	___ftmul@f1+1,f
  1162  03AB  0CA8               	rrf	___ftmul@f1,f
  1163  03AC  0B89               	decfsz	9,f
  1164  03AD  2BA9               	goto	u1495
  1165  03AE  3001               	movlw	1
  1166  03AF                     u1505:	
  1167  03AF  36B5               	lsrf	___ftmul@f3_as_product+2,f
  1168  03B0  0CB4               	rrf	___ftmul@f3_as_product+1,f
  1169  03B1  0CB3               	rrf	___ftmul@f3_as_product,f
  1170  03B2  0B89               	decfsz	9,f
  1171  03B3  2BAF               	goto	u1505
  1172  03B4  3001               	movlw	1
  1173  03B5  02B6               	subwf	___ftmul@cntr,f
  1174  03B6  1D03               	btfss	3,2
  1175  03B7  2BA0               	goto	l1381
  1176  03B8  0833               	movf	___ftmul@f3_as_product,w
  1177  03B9  00A0               	movwf	___ftpack@arg
  1178  03BA  0834               	movf	___ftmul@f3_as_product+1,w
  1179  03BB  00A1               	movwf	___ftpack@arg+1
  1180  03BC  0835               	movf	___ftmul@f3_as_product+2,w
  1181  03BD  00A2               	movwf	___ftpack@arg+2
  1182  03BE  0832               	movf	___ftmul@exp,w
  1183  03BF  00AE               	movwf	??___ftmul
  1184  03C0  082E               	movf	??___ftmul,w
  1185  03C1  00A3               	movwf	___ftpack@exp
  1186  03C2  0837               	movf	___ftmul@sign,w
  1187  03C3  00AF               	movwf	??___ftmul+1
  1188  03C4  082F               	movf	??___ftmul+1,w
  1189  03C5  00A4               	movwf	___ftpack@sign
  1190  03C6  3184  24EA         	fcall	___ftpack
  1191  03C8  0020               	movlb	0	; select bank0
  1192  03C9  0820               	movf	?___ftpack,w
  1193  03CA  00A8               	movwf	?___ftmul
  1194  03CB  0821               	movf	?___ftpack+1,w
  1195  03CC  00A9               	movwf	?___ftmul+1
  1196  03CD  0822               	movf	?___ftpack+2,w
  1197  03CE  00AA               	movwf	?___ftmul+2
  1198  03CF  0008               	return
  1199  03D0                     __end_of___ftmul:	
  1200                           
  1201                           	psect	text4
  1202  0226                     __ptext4:	
  1203 ;; *************** function ___ftadd *****************
  1204 ;; Defined at:
  1205 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  f1              3   27[BANK0 ] float 
  1208 ;;  f2              3   30[BANK0 ] float 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  exp1            1   39[BANK0 ] unsigned char 
  1211 ;;  exp2            1   38[BANK0 ] unsigned char 
  1212 ;;  sign            1   37[BANK0 ] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  3   27[BANK0 ] float 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1222 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1223 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1224 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1225 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1226 ;;Total ram usage:       13 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    4
  1229 ;; This function calls:
  1230 ;;		___ftpack
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function ___ftadd
  1238  0226                     ___ftadd:	
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1242  0226  0020               	movlb	0	; select bank0
  1243  0227  083B               	movf	___ftadd@f1,w
  1244  0228  00C1               	movwf	??___ftadd
  1245  0229  083C               	movf	___ftadd@f1+1,w
  1246  022A  00C2               	movwf	??___ftadd+1
  1247  022B  083D               	movf	___ftadd@f1+2,w
  1248  022C  00C3               	movwf	??___ftadd+2
  1249  022D  1003               	clrc
  1250  022E  0D42               	rlf	??___ftadd+1,w
  1251  022F  0D43               	rlf	??___ftadd+2,w
  1252  0230  00C4               	movwf	??___ftadd+3
  1253  0231  0844               	movf	??___ftadd+3,w
  1254  0232  00C7               	movwf	___ftadd@exp1
  1255  0233  083E               	movf	___ftadd@f2,w
  1256  0234  00C1               	movwf	??___ftadd
  1257  0235  083F               	movf	___ftadd@f2+1,w
  1258  0236  00C2               	movwf	??___ftadd+1
  1259  0237  0840               	movf	___ftadd@f2+2,w
  1260  0238  00C3               	movwf	??___ftadd+2
  1261  0239  1003               	clrc
  1262  023A  0D42               	rlf	??___ftadd+1,w
  1263  023B  0D43               	rlf	??___ftadd+2,w
  1264  023C  00C4               	movwf	??___ftadd+3
  1265  023D  0844               	movf	??___ftadd+3,w
  1266  023E  00C6               	movwf	___ftadd@exp2
  1267  023F  0847               	movf	___ftadd@exp1,w
  1268  0240  1903               	btfsc	3,2
  1269  0241  2A4E               	goto	l1281
  1270  0242  0846               	movf	___ftadd@exp2,w
  1271  0243  0247               	subwf	___ftadd@exp1,w
  1272  0244  1803               	skipnc
  1273  0245  2A55               	goto	l1285
  1274  0246  0347               	decf	___ftadd@exp1,w
  1275  0247  3AFF               	xorlw	255
  1276  0248  0746               	addwf	___ftadd@exp2,w
  1277  0249  00C1               	movwf	??___ftadd
  1278  024A  3019               	movlw	25
  1279  024B  0241               	subwf	??___ftadd,w
  1280  024C  1C03               	skipc
  1281  024D  2A55               	goto	l1285
  1282  024E                     l1281:	
  1283  024E  083E               	movf	___ftadd@f2,w
  1284  024F  00BB               	movwf	?___ftadd
  1285  0250  083F               	movf	___ftadd@f2+1,w
  1286  0251  00BC               	movwf	?___ftadd+1
  1287  0252  0840               	movf	___ftadd@f2+2,w
  1288  0253  00BD               	movwf	?___ftadd+2
  1289  0254  0008               	return
  1290  0255                     l1285:	
  1291  0255  0846               	movf	___ftadd@exp2,w
  1292  0256  1903               	btfsc	3,2
  1293  0257  0008               	return
  1294  0258  0847               	movf	___ftadd@exp1,w
  1295  0259  0246               	subwf	___ftadd@exp2,w
  1296  025A  1803               	skipnc
  1297  025B  2A64               	goto	l1291
  1298  025C  0346               	decf	___ftadd@exp2,w
  1299  025D  3AFF               	xorlw	255
  1300  025E  0747               	addwf	___ftadd@exp1,w
  1301  025F  00C1               	movwf	??___ftadd
  1302  0260  3019               	movlw	25
  1303  0261  0241               	subwf	??___ftadd,w
  1304  0262  1803               	btfsc	3,0
  1305  0263  0008               	return
  1306  0264                     l1291:	
  1307  0264  3006               	movlw	6
  1308  0265  00C1               	movwf	??___ftadd
  1309  0266  0841               	movf	??___ftadd,w
  1310  0267  00C5               	movwf	___ftadd@sign
  1311  0268  1BBD               	btfsc	___ftadd@f1+2,7
  1312  0269  17C5               	bsf	___ftadd@sign,7
  1313  026A  1BC0               	btfsc	___ftadd@f2+2,7
  1314  026B  1745               	bsf	___ftadd@sign,6
  1315  026C  17BC               	bsf	___ftadd@f1+1,7
  1316  026D  30FF               	movlw	255
  1317  026E  05BB               	andwf	___ftadd@f1,f
  1318  026F  30FF               	movlw	255
  1319  0270  05BC               	andwf	___ftadd@f1+1,f
  1320  0271  3000               	movlw	0
  1321  0272  05BD               	andwf	___ftadd@f1+2,f
  1322  0273  17BF               	bsf	___ftadd@f2+1,7
  1323  0274  30FF               	movlw	255
  1324  0275  05BE               	andwf	___ftadd@f2,f
  1325  0276  30FF               	movlw	255
  1326  0277  05BF               	andwf	___ftadd@f2+1,f
  1327  0278  3000               	movlw	0
  1328  0279  05C0               	andwf	___ftadd@f2+2,f
  1329  027A  0846               	movf	___ftadd@exp2,w
  1330  027B  0247               	subwf	___ftadd@exp1,w
  1331  027C  1803               	skipnc
  1332  027D  2AA0               	goto	l1313
  1333  027E                     l1303:	
  1334  027E  3001               	movlw	1
  1335  027F                     u1265:	
  1336  027F  35BE               	lslf	___ftadd@f2,f
  1337  0280  0DBF               	rlf	___ftadd@f2+1,f
  1338  0281  0DC0               	rlf	___ftadd@f2+2,f
  1339  0282  0B89               	decfsz	9,f
  1340  0283  2A7F               	goto	u1265
  1341  0284  3001               	movlw	1
  1342  0285  02C6               	subwf	___ftadd@exp2,f
  1343  0286  0846               	movf	___ftadd@exp2,w
  1344  0287  0647               	xorwf	___ftadd@exp1,w
  1345  0288  1903               	skipnz
  1346  0289  2A9B               	goto	l1311
  1347  028A  3001               	movlw	1
  1348  028B  02C5               	subwf	___ftadd@sign,f
  1349  028C  0845               	movf	___ftadd@sign,w
  1350  028D  3907               	andlw	7
  1351  028E  1903               	btfsc	3,2
  1352  028F  2A9B               	goto	l1311
  1353  0290  2A7E               	goto	l1303
  1354  0291                     l1309:	
  1355  0291  3001               	movlw	1
  1356  0292                     u1295:	
  1357  0292  36BD               	lsrf	___ftadd@f1+2,f
  1358  0293  0CBC               	rrf	___ftadd@f1+1,f
  1359  0294  0CBB               	rrf	___ftadd@f1,f
  1360  0295  0B89               	decfsz	9,f
  1361  0296  2A92               	goto	u1295
  1362  0297  3001               	movlw	1
  1363  0298  00C1               	movwf	??___ftadd
  1364  0299  0841               	movf	??___ftadd,w
  1365  029A  07C7               	addwf	___ftadd@exp1,f
  1366  029B                     l1311:	
  1367  029B  0847               	movf	___ftadd@exp1,w
  1368  029C  0646               	xorwf	___ftadd@exp2,w
  1369  029D  1903               	btfsc	3,2
  1370  029E  2AC5               	goto	l409
  1371  029F  2A91               	goto	l1309
  1372  02A0                     l1313:	
  1373  02A0  0847               	movf	___ftadd@exp1,w
  1374  02A1  0246               	subwf	___ftadd@exp2,w
  1375  02A2  1803               	skipnc
  1376  02A3  2AC5               	goto	l409
  1377  02A4                     l1315:	
  1378  02A4  3001               	movlw	1
  1379  02A5                     u1325:	
  1380  02A5  35BB               	lslf	___ftadd@f1,f
  1381  02A6  0DBC               	rlf	___ftadd@f1+1,f
  1382  02A7  0DBD               	rlf	___ftadd@f1+2,f
  1383  02A8  0B89               	decfsz	9,f
  1384  02A9  2AA5               	goto	u1325
  1385  02AA  3001               	movlw	1
  1386  02AB  02C7               	subwf	___ftadd@exp1,f
  1387  02AC  0846               	movf	___ftadd@exp2,w
  1388  02AD  0647               	xorwf	___ftadd@exp1,w
  1389  02AE  1903               	skipnz
  1390  02AF  2AC1               	goto	l1323
  1391  02B0  3001               	movlw	1
  1392  02B1  02C5               	subwf	___ftadd@sign,f
  1393  02B2  0845               	movf	___ftadd@sign,w
  1394  02B3  3907               	andlw	7
  1395  02B4  1903               	btfsc	3,2
  1396  02B5  2AC1               	goto	l1323
  1397  02B6  2AA4               	goto	l1315
  1398  02B7                     l1321:	
  1399  02B7  3001               	movlw	1
  1400  02B8                     u1355:	
  1401  02B8  36C0               	lsrf	___ftadd@f2+2,f
  1402  02B9  0CBF               	rrf	___ftadd@f2+1,f
  1403  02BA  0CBE               	rrf	___ftadd@f2,f
  1404  02BB  0B89               	decfsz	9,f
  1405  02BC  2AB8               	goto	u1355
  1406  02BD  3001               	movlw	1
  1407  02BE  00C1               	movwf	??___ftadd
  1408  02BF  0841               	movf	??___ftadd,w
  1409  02C0  07C6               	addwf	___ftadd@exp2,f
  1410  02C1                     l1323:	
  1411  02C1  0847               	movf	___ftadd@exp1,w
  1412  02C2  0646               	xorwf	___ftadd@exp2,w
  1413  02C3  1D03               	skipz
  1414  02C4  2AB7               	goto	l1321
  1415  02C5                     l409:	
  1416  02C5  1FC5               	btfss	___ftadd@sign,7
  1417  02C6  2AD7               	goto	l1327
  1418  02C7  30FF               	movlw	255
  1419  02C8  06BB               	xorwf	___ftadd@f1,f
  1420  02C9  30FF               	movlw	255
  1421  02CA  06BC               	xorwf	___ftadd@f1+1,f
  1422  02CB  30FF               	movlw	255
  1423  02CC  06BD               	xorwf	___ftadd@f1+2,f
  1424  02CD  3001               	movlw	1
  1425  02CE  07BB               	addwf	___ftadd@f1,f
  1426  02CF  3000               	movlw	0
  1427  02D0  1803               	skipnc
  1428  02D1  3001               	movlw	1
  1429  02D2  07BC               	addwf	___ftadd@f1+1,f
  1430  02D3  3000               	movlw	0
  1431  02D4  1803               	skipnc
  1432  02D5  3001               	movlw	1
  1433  02D6  07BD               	addwf	___ftadd@f1+2,f
  1434  02D7                     l1327:	
  1435  02D7  1F45               	btfss	___ftadd@sign,6
  1436  02D8  2AE9               	goto	l1331
  1437  02D9  30FF               	movlw	255
  1438  02DA  06BE               	xorwf	___ftadd@f2,f
  1439  02DB  30FF               	movlw	255
  1440  02DC  06BF               	xorwf	___ftadd@f2+1,f
  1441  02DD  30FF               	movlw	255
  1442  02DE  06C0               	xorwf	___ftadd@f2+2,f
  1443  02DF  3001               	movlw	1
  1444  02E0  07BE               	addwf	___ftadd@f2,f
  1445  02E1  3000               	movlw	0
  1446  02E2  1803               	skipnc
  1447  02E3  3001               	movlw	1
  1448  02E4  07BF               	addwf	___ftadd@f2+1,f
  1449  02E5  3000               	movlw	0
  1450  02E6  1803               	skipnc
  1451  02E7  3001               	movlw	1
  1452  02E8  07C0               	addwf	___ftadd@f2+2,f
  1453  02E9                     l1331:	
  1454  02E9  01C5               	clrf	___ftadd@sign
  1455  02EA  083B               	movf	___ftadd@f1,w
  1456  02EB  07BE               	addwf	___ftadd@f2,f
  1457  02EC  083C               	movf	___ftadd@f1+1,w
  1458  02ED  3DBF               	addwfc	___ftadd@f2+1,f
  1459  02EE  083D               	movf	___ftadd@f1+2,w
  1460  02EF  3DC0               	addwfc	___ftadd@f2+2,f
  1461  02F0  1FC0               	btfss	___ftadd@f2+2,7
  1462  02F1  2B04               	goto	l1341
  1463  02F2  30FF               	movlw	255
  1464  02F3  06BE               	xorwf	___ftadd@f2,f
  1465  02F4  30FF               	movlw	255
  1466  02F5  06BF               	xorwf	___ftadd@f2+1,f
  1467  02F6  30FF               	movlw	255
  1468  02F7  06C0               	xorwf	___ftadd@f2+2,f
  1469  02F8  3001               	movlw	1
  1470  02F9  07BE               	addwf	___ftadd@f2,f
  1471  02FA  3000               	movlw	0
  1472  02FB  1803               	skipnc
  1473  02FC  3001               	movlw	1
  1474  02FD  07BF               	addwf	___ftadd@f2+1,f
  1475  02FE  3000               	movlw	0
  1476  02FF  1803               	skipnc
  1477  0300  3001               	movlw	1
  1478  0301  07C0               	addwf	___ftadd@f2+2,f
  1479  0302  01C5               	clrf	___ftadd@sign
  1480  0303  0AC5               	incf	___ftadd@sign,f
  1481  0304                     l1341:	
  1482  0304  083E               	movf	___ftadd@f2,w
  1483  0305  00A0               	movwf	___ftpack@arg
  1484  0306  083F               	movf	___ftadd@f2+1,w
  1485  0307  00A1               	movwf	___ftpack@arg+1
  1486  0308  0840               	movf	___ftadd@f2+2,w
  1487  0309  00A2               	movwf	___ftpack@arg+2
  1488  030A  0847               	movf	___ftadd@exp1,w
  1489  030B  00C1               	movwf	??___ftadd
  1490  030C  0841               	movf	??___ftadd,w
  1491  030D  00A3               	movwf	___ftpack@exp
  1492  030E  0845               	movf	___ftadd@sign,w
  1493  030F  00C2               	movwf	??___ftadd+1
  1494  0310  0842               	movf	??___ftadd+1,w
  1495  0311  00A4               	movwf	___ftpack@sign
  1496  0312  3184  24EA         	fcall	___ftpack
  1497  0314  0020               	movlb	0	; select bank0
  1498  0315  0820               	movf	?___ftpack,w
  1499  0316  00BB               	movwf	?___ftadd
  1500  0317  0821               	movf	?___ftpack+1,w
  1501  0318  00BC               	movwf	?___ftadd+1
  1502  0319  0822               	movf	?___ftpack+2,w
  1503  031A  00BD               	movwf	?___ftadd+2
  1504  031B  0008               	return
  1505  031C                     __end_of___ftadd:	
  1506                           
  1507                           	psect	text5
  1508  0594                     __ptext5:	
  1509 ;; *************** function ___awtoft *****************
  1510 ;; Defined at:
  1511 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  c               2    8[BANK0 ] int 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  sign            1   13[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  3    8[BANK0 ] float 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1525 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;Total ram usage:        6 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    4
  1532 ;; This function calls:
  1533 ;;		___ftpack
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function ___awtoft
  1541  0594                     ___awtoft:	
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1545  0594  0020               	movlb	0	; select bank0
  1546  0595  01AD               	clrf	___awtoft@sign
  1547  0596  1FA9               	btfss	___awtoft@c+1,7
  1548  0597  2D9F               	goto	l1271
  1549  0598  09A8               	comf	___awtoft@c,f
  1550  0599  09A9               	comf	___awtoft@c+1,f
  1551  059A  0AA8               	incf	___awtoft@c,f
  1552  059B  1903               	skipnz
  1553  059C  0AA9               	incf	___awtoft@c+1,f
  1554  059D  01AD               	clrf	___awtoft@sign
  1555  059E  0AAD               	incf	___awtoft@sign,f
  1556  059F                     l1271:	
  1557  059F  0828               	movf	___awtoft@c,w
  1558  05A0  00A0               	movwf	___ftpack@arg
  1559  05A1  0829               	movf	___awtoft@c+1,w
  1560  05A2  00A1               	movwf	___ftpack@arg+1
  1561  05A3  01A2               	clrf	___ftpack@arg+2
  1562  05A4  308E               	movlw	142
  1563  05A5  00AB               	movwf	??___awtoft
  1564  05A6  082B               	movf	??___awtoft,w
  1565  05A7  00A3               	movwf	___ftpack@exp
  1566  05A8  082D               	movf	___awtoft@sign,w
  1567  05A9  00AC               	movwf	??___awtoft+1
  1568  05AA  082C               	movf	??___awtoft+1,w
  1569  05AB  00A4               	movwf	___ftpack@sign
  1570  05AC  3184  24EA         	fcall	___ftpack
  1571  05AE  0020               	movlb	0	; select bank0
  1572  05AF  0820               	movf	?___ftpack,w
  1573  05B0  00A8               	movwf	?___awtoft
  1574  05B1  0821               	movf	?___ftpack+1,w
  1575  05B2  00A9               	movwf	?___awtoft+1
  1576  05B3  0822               	movf	?___ftpack+2,w
  1577  05B4  00AA               	movwf	?___awtoft+2
  1578  05B5  0008               	return
  1579  05B6                     __end_of___awtoft:	
  1580                           
  1581                           	psect	text6
  1582  04EA                     __ptext6:	
  1583 ;; *************** function ___ftpack *****************
  1584 ;; Defined at:
  1585 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  arg             3    0[BANK0 ] unsigned um
  1588 ;;  exp             1    3[BANK0 ] unsigned char 
  1589 ;;  sign            1    4[BANK0 ] unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  3    0[BANK0 ] float 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1601 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1604 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1605 ;;Total ram usage:        8 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    3
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		___awtoft
  1612 ;;		___ftadd
  1613 ;;		___ftmul
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function ___ftpack
  1619  04EA                     ___ftpack:	
  1620                           
  1621                           ;incstack = 0
  1622                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1623  04EA  0020               	movlb	0	; select bank0
  1624  04EB  0823               	movf	___ftpack@exp,w
  1625  04EC  1903               	btfsc	3,2
  1626  04ED  2CF3               	goto	l1185
  1627  04EE  0822               	movf	___ftpack@arg+2,w
  1628  04EF  0421               	iorwf	___ftpack@arg+1,w
  1629  04F0  0420               	iorwf	___ftpack@arg,w
  1630  04F1  1D03               	skipz
  1631  04F2  2D04               	goto	l1191
  1632  04F3                     l1185:	
  1633  04F3  3000               	movlw	0
  1634  04F4  00A0               	movwf	?___ftpack
  1635  04F5  3000               	movlw	0
  1636  04F6  00A1               	movwf	?___ftpack+1
  1637  04F7  3000               	movlw	0
  1638  04F8  00A2               	movwf	?___ftpack+2
  1639  04F9  0008               	return
  1640  04FA                     l1189:	
  1641  04FA  3001               	movlw	1
  1642  04FB  00A5               	movwf	??___ftpack
  1643  04FC  0825               	movf	??___ftpack,w
  1644  04FD  07A3               	addwf	___ftpack@exp,f
  1645  04FE  3001               	movlw	1
  1646  04FF                     u965:	
  1647  04FF  36A2               	lsrf	___ftpack@arg+2,f
  1648  0500  0CA1               	rrf	___ftpack@arg+1,f
  1649  0501  0CA0               	rrf	___ftpack@arg,f
  1650  0502  0B89               	decfsz	9,f
  1651  0503  2CFF               	goto	u965
  1652  0504                     l1191:	
  1653  0504  30FE               	movlw	254
  1654  0505  0522               	andwf	___ftpack@arg+2,w
  1655  0506  1903               	btfsc	3,2
  1656  0507  2D1D               	goto	l378
  1657  0508  2CFA               	goto	l1189
  1658  0509                     l1193:	
  1659  0509  3001               	movlw	1
  1660  050A  00A5               	movwf	??___ftpack
  1661  050B  0825               	movf	??___ftpack,w
  1662  050C  07A3               	addwf	___ftpack@exp,f
  1663  050D  3001               	movlw	1
  1664  050E  07A0               	addwf	___ftpack@arg,f
  1665  050F  3000               	movlw	0
  1666  0510  1803               	skipnc
  1667  0511  3001               	movlw	1
  1668  0512  07A1               	addwf	___ftpack@arg+1,f
  1669  0513  3000               	movlw	0
  1670  0514  1803               	skipnc
  1671  0515  3001               	movlw	1
  1672  0516  07A2               	addwf	___ftpack@arg+2,f
  1673  0517  3001               	movlw	1
  1674  0518                     u985:	
  1675  0518  36A2               	lsrf	___ftpack@arg+2,f
  1676  0519  0CA1               	rrf	___ftpack@arg+1,f
  1677  051A  0CA0               	rrf	___ftpack@arg,f
  1678  051B  0B89               	decfsz	9,f
  1679  051C  2D18               	goto	u985
  1680  051D                     l378:	
  1681  051D  30FF               	movlw	255
  1682  051E  0522               	andwf	___ftpack@arg+2,w
  1683  051F  1903               	btfsc	3,2
  1684  0520  2D2A               	goto	l1201
  1685  0521  2D09               	goto	l1193
  1686  0522                     l1199:	
  1687  0522  3001               	movlw	1
  1688  0523  02A3               	subwf	___ftpack@exp,f
  1689  0524  3001               	movlw	1
  1690  0525                     u1005:	
  1691  0525  35A0               	lslf	___ftpack@arg,f
  1692  0526  0DA1               	rlf	___ftpack@arg+1,f
  1693  0527  0DA2               	rlf	___ftpack@arg+2,f
  1694  0528  0B89               	decfsz	9,f
  1695  0529  2D25               	goto	u1005
  1696  052A                     l1201:	
  1697  052A  1BA1               	btfsc	___ftpack@arg+1,7
  1698  052B  2D30               	goto	l385
  1699  052C  3002               	movlw	2
  1700  052D  0223               	subwf	___ftpack@exp,w
  1701  052E  1803               	skipnc
  1702  052F  2D22               	goto	l1199
  1703  0530                     l385:	
  1704  0530  1823               	btfsc	___ftpack@exp,0
  1705  0531  2D38               	goto	l386
  1706  0532  30FF               	movlw	255
  1707  0533  05A0               	andwf	___ftpack@arg,f
  1708  0534  307F               	movlw	127
  1709  0535  05A1               	andwf	___ftpack@arg+1,f
  1710  0536  30FF               	movlw	255
  1711  0537  05A2               	andwf	___ftpack@arg+2,f
  1712  0538                     l386:	
  1713  0538  1003               	clrc
  1714  0539  0CA3               	rrf	___ftpack@exp,f
  1715  053A  0823               	movf	___ftpack@exp,w
  1716  053B  00A5               	movwf	??___ftpack
  1717  053C  01A6               	clrf	??___ftpack+1
  1718  053D  01A7               	clrf	??___ftpack+2
  1719  053E  3010               	movlw	16
  1720  053F                     u1045:	
  1721  053F  35A5               	lslf	??___ftpack,f
  1722  0540  0DA6               	rlf	??___ftpack+1,f
  1723  0541  0DA7               	rlf	??___ftpack+2,f
  1724  0542  0B89               	decfsz	9,f
  1725  0543  2D3F               	goto	u1045
  1726  0544  0825               	movf	??___ftpack,w
  1727  0545  04A0               	iorwf	___ftpack@arg,f
  1728  0546  0826               	movf	??___ftpack+1,w
  1729  0547  04A1               	iorwf	___ftpack@arg+1,f
  1730  0548  0827               	movf	??___ftpack+2,w
  1731  0549  04A2               	iorwf	___ftpack@arg+2,f
  1732  054A  0824               	movf	___ftpack@sign,w
  1733  054B  1903               	btfsc	3,2
  1734  054C  0008               	return
  1735  054D  17A2               	bsf	___ftpack@arg+2,7
  1736  054E  0008               	return
  1737  054F                     __end_of___ftpack:	
  1738                           
  1739                           	psect	intentry
  1740  0004                     __pintentry:	
  1741 ;; *************** function _isr *****************
  1742 ;; Defined at:
  1743 ;;		line 69 in file "mainSrc.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;		None               void
  1750 ;; Registers used:
  1751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;Total ram usage:        2 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    2
  1764 ;; This function calls:
  1765 ;;		___awmod
  1766 ;;		_disableCCP1Out
  1767 ;;		_enableCCP1Out
  1768 ;;		_finishNote
  1769 ;;		_lightLed
  1770 ;;		_waitTimer2
  1771 ;; This function is called by:
  1772 ;;		Interrupt level 1
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776  0004                     _isr:	
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1780  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1781  0005  3180               	pagesel	$
  1782  0006  0020               	movlb	0	; select bank0
  1783  0007  087F               	movf	127,w
  1784  0008  00F8               	movwf	??_isr+1
  1785                           
  1786                           ;mainSrc.c: 72: if(INTCONbits.T0IF == 1)
  1787  0009  1D0B               	btfss	11,2	;volatile
  1788  000A  2A05               	goto	i1l122
  1789                           
  1790                           ;mainSrc.c: 73: {
  1791                           ;mainSrc.c: 74: new_frequency = ((TMR1H << 8) + TMR1L);
  1792  000B  0817               	movf	23,w	;volatile
  1793  000C  00FA               	movwf	_new_frequency+1
  1794  000D  0816               	movf	22,w	;volatile
  1795  000E  00F9               	movwf	_new_frequency
  1796                           
  1797                           ;mainSrc.c: 92: switch(selected_cps_pin)
  1798  000F  29DF               	goto	i1l1617
  1799  0010                     i1l1449:	
  1800                           ;mainSrc.c: 93: {
  1801                           ;mainSrc.c: 95: case 0 :
  1802                           
  1803                           
  1804                           ;mainSrc.c: 96: if(new_frequency < threshold_frequency)
  1805  0010  087A               	movf	_new_frequency+1,w
  1806  0011  3A80               	xorlw	128
  1807  0012  00F7               	movwf	??_isr
  1808  0013  087C               	movf	_threshold_frequency+1,w
  1809  0014  3A80               	xorlw	128
  1810  0015  0277               	subwf	??_isr,w
  1811  0016  1D03               	skipz
  1812  0017  281A               	goto	u164_25
  1813  0018  087B               	movf	_threshold_frequency,w
  1814  0019  0279               	subwf	_new_frequency,w
  1815  001A                     u164_25:	
  1816  001A  1803               	skipnc
  1817  001B  283B               	goto	i1l1471
  1818                           
  1819                           ;mainSrc.c: 97: {
  1820                           ;mainSrc.c: 98: if(last_pin_touched != 0)
  1821  001C  0020               	movlb	0	; select bank0
  1822  001D  0864               	movf	_last_pin_touched,w
  1823  001E  0465               	iorwf	_last_pin_touched+1,w
  1824  001F  1903               	btfsc	3,2
  1825  0020  2837               	goto	i1l1469
  1826                           
  1827                           ;mainSrc.c: 99: {
  1828                           ;mainSrc.c: 100: last_pin_touched = 0;
  1829  0021  01E4               	clrf	_last_pin_touched
  1830  0022  01E5               	clrf	_last_pin_touched+1
  1831                           
  1832                           ;mainSrc.c: 101: lightLed();
  1833  0023  3185  25E3  3180   	fcall	_lightLed
  1834                           
  1835                           ;mainSrc.c: 102: disableCCP1Out();
  1836  0026  3185  25E9  3180   	fcall	_disableCCP1Out
  1837                           
  1838                           ;mainSrc.c: 105: PR2 = 0b01111110;
  1839  0029  307E               	movlw	126
  1840  002A  0020               	movlb	0	; select bank0
  1841  002B  009B               	movwf	27	;volatile
  1842                           
  1843                           ;mainSrc.c: 106: CCP1CON = 0b00011100;
  1844  002C  301C               	movlw	28
  1845  002D  0025               	movlb	5	; select bank5
  1846  002E  0093               	movwf	19	;volatile
  1847                           
  1848                           ;mainSrc.c: 107: CCPR1L = 0b00111111;
  1849  002F  303F               	movlw	63
  1850  0030  0091               	movwf	17	;volatile
  1851                           
  1852                           ;mainSrc.c: 110: waitTimer2();
  1853  0031  3185  25DA  3180   	fcall	_waitTimer2
  1854                           
  1855                           ;mainSrc.c: 113: enableCCP1Out();
  1856  0034  3185  25EC  3180   	fcall	_enableCCP1Out
  1857  0037                     i1l1469:	
  1858                           
  1859                           ;mainSrc.c: 114: }
  1860                           ;mainSrc.c: 115: step_count = 0;
  1861  0037  0020               	movlb	0	; select bank0
  1862  0038  01E0               	clrf	_step_count
  1863  0039  01E1               	clrf	_step_count+1
  1864                           
  1865                           ;mainSrc.c: 116: }
  1866  003A  284B               	goto	i1l1475
  1867  003B                     i1l1471:	
  1868                           
  1869                           ;mainSrc.c: 117: else
  1870                           ;mainSrc.c: 118: {
  1871                           ;mainSrc.c: 119: step_count++;
  1872  003B  3001               	movlw	1
  1873  003C  0020               	movlb	0	; select bank0
  1874  003D  07E0               	addwf	_step_count,f
  1875  003E  3000               	movlw	0
  1876  003F  3DE1               	addwfc	_step_count+1,f
  1877                           
  1878                           ;mainSrc.c: 120: if(step_count == MAX_STEP_SOUND_LENGTH)
  1879  0040  0863               	movf	_MAX_STEP_SOUND_LENGTH+1,w
  1880  0041  0661               	xorwf	_step_count+1,w
  1881  0042  1D03               	skipz
  1882  0043  2846               	goto	u166_25
  1883  0044  0862               	movf	_MAX_STEP_SOUND_LENGTH,w
  1884  0045  0660               	xorwf	_step_count,w
  1885  0046                     u166_25:	
  1886  0046  1D03               	skipz
  1887  0047  284B               	goto	i1l1475
  1888                           
  1889                           ;mainSrc.c: 121: {
  1890                           ;mainSrc.c: 122: finishNote();
  1891  0048  3185  25C4  3180   	fcall	_finishNote
  1892  004B                     i1l1475:	
  1893                           
  1894                           ;mainSrc.c: 123: }
  1895                           ;mainSrc.c: 124: }
  1896                           ;mainSrc.c: 125: CPSCON1bits.CPSCH = 0b0001;
  1897  004B  0020               	movlb	0	; select bank0
  1898  004C  081F               	movf	31,w	;volatile
  1899  004D  39F8               	andlw	-8
  1900  004E  3801               	iorlw	1
  1901  004F  299B               	goto	L5
  1902  0050                     i1l1477:	
  1903                           ;mainSrc.c: 128: case 1 :
  1904                           
  1905                           ;mainSrc.c: 126: break;
  1906                           
  1907                           
  1908                           ;mainSrc.c: 129: if(new_frequency < threshold_frequency)
  1909  0050  087A               	movf	_new_frequency+1,w
  1910  0051  3A80               	xorlw	128
  1911  0052  00F7               	movwf	??_isr
  1912  0053  087C               	movf	_threshold_frequency+1,w
  1913  0054  3A80               	xorlw	128
  1914  0055  0277               	subwf	??_isr,w
  1915  0056  1D03               	skipz
  1916  0057  285A               	goto	u167_25
  1917  0058  087B               	movf	_threshold_frequency,w
  1918  0059  0279               	subwf	_new_frequency,w
  1919  005A                     u167_25:	
  1920  005A  1803               	skipnc
  1921  005B  287B               	goto	i1l1499
  1922                           
  1923                           ;mainSrc.c: 130: {
  1924                           ;mainSrc.c: 131: if(last_pin_touched != 1)
  1925  005C  0020               	movlb	0	; select bank0
  1926  005D  0364               	decf	_last_pin_touched,w
  1927  005E  0465               	iorwf	_last_pin_touched+1,w
  1928  005F  1903               	btfsc	3,2
  1929  0060  2877               	goto	i1l1497
  1930                           
  1931                           ;mainSrc.c: 132: {
  1932                           ;mainSrc.c: 133: last_pin_touched = 0;
  1933  0061  01E4               	clrf	_last_pin_touched
  1934  0062  01E5               	clrf	_last_pin_touched+1
  1935                           
  1936                           ;mainSrc.c: 134: lightLed();
  1937  0063  3185  25E3  3180   	fcall	_lightLed
  1938                           
  1939                           ;mainSrc.c: 135: disableCCP1Out();
  1940  0066  3185  25E9  3180   	fcall	_disableCCP1Out
  1941                           
  1942                           ;mainSrc.c: 138: PR2 = 0b10001101;
  1943  0069  308D               	movlw	141
  1944  006A  0020               	movlb	0	; select bank0
  1945  006B  009B               	movwf	27	;volatile
  1946                           
  1947                           ;mainSrc.c: 139: CCP1CON = 0b00111100;
  1948  006C  303C               	movlw	60
  1949  006D  0025               	movlb	5	; select bank5
  1950  006E  0093               	movwf	19	;volatile
  1951                           
  1952                           ;mainSrc.c: 140: CCPR1L = 0b01000110;
  1953  006F  3046               	movlw	70
  1954  0070  0091               	movwf	17	;volatile
  1955                           
  1956                           ;mainSrc.c: 143: waitTimer2();
  1957  0071  3185  25DA  3180   	fcall	_waitTimer2
  1958                           
  1959                           ;mainSrc.c: 146: enableCCP1Out();
  1960  0074  3185  25EC  3180   	fcall	_enableCCP1Out
  1961  0077                     i1l1497:	
  1962                           
  1963                           ;mainSrc.c: 147: }
  1964                           ;mainSrc.c: 148: step_count = 0;
  1965  0077  0020               	movlb	0	; select bank0
  1966  0078  01E0               	clrf	_step_count
  1967  0079  01E1               	clrf	_step_count+1
  1968                           
  1969                           ;mainSrc.c: 149: }
  1970  007A  288B               	goto	i1l1503
  1971  007B                     i1l1499:	
  1972                           
  1973                           ;mainSrc.c: 150: else
  1974                           ;mainSrc.c: 151: {
  1975                           ;mainSrc.c: 152: step_count++;
  1976  007B  3001               	movlw	1
  1977  007C  0020               	movlb	0	; select bank0
  1978  007D  07E0               	addwf	_step_count,f
  1979  007E  3000               	movlw	0
  1980  007F  3DE1               	addwfc	_step_count+1,f
  1981                           
  1982                           ;mainSrc.c: 153: if(step_count == MAX_STEP_SOUND_LENGTH)
  1983  0080  0863               	movf	_MAX_STEP_SOUND_LENGTH+1,w
  1984  0081  0661               	xorwf	_step_count+1,w
  1985  0082  1D03               	skipz
  1986  0083  2886               	goto	u169_25
  1987  0084  0862               	movf	_MAX_STEP_SOUND_LENGTH,w
  1988  0085  0660               	xorwf	_step_count,w
  1989  0086                     u169_25:	
  1990  0086  1D03               	skipz
  1991  0087  288B               	goto	i1l1503
  1992                           
  1993                           ;mainSrc.c: 154: {
  1994                           ;mainSrc.c: 155: finishNote();
  1995  0088  3185  25C4  3180   	fcall	_finishNote
  1996  008B                     i1l1503:	
  1997                           
  1998                           ;mainSrc.c: 156: }
  1999                           ;mainSrc.c: 157: }
  2000                           ;mainSrc.c: 158: CPSCON1bits.CPSCH = 0b0010;
  2001  008B  0020               	movlb	0	; select bank0
  2002  008C  081F               	movf	31,w	;volatile
  2003  008D  39F8               	andlw	-8
  2004  008E  3802               	iorlw	2
  2005  008F  299B               	goto	L5
  2006  0090                     i1l1505:	
  2007                           ;mainSrc.c: 161: case 2 :
  2008                           
  2009                           ;mainSrc.c: 159: break;
  2010                           
  2011                           
  2012                           ;mainSrc.c: 162: if(new_frequency < threshold_frequency)
  2013  0090  087A               	movf	_new_frequency+1,w
  2014  0091  3A80               	xorlw	128
  2015  0092  00F7               	movwf	??_isr
  2016  0093  087C               	movf	_threshold_frequency+1,w
  2017  0094  3A80               	xorlw	128
  2018  0095  0277               	subwf	??_isr,w
  2019  0096  1D03               	skipz
  2020  0097  289A               	goto	u170_25
  2021  0098  087B               	movf	_threshold_frequency,w
  2022  0099  0279               	subwf	_new_frequency,w
  2023  009A                     u170_25:	
  2024  009A  1803               	skipnc
  2025  009B  28BE               	goto	i1l1521
  2026                           
  2027                           ;mainSrc.c: 163: {
  2028                           ;mainSrc.c: 164: if(last_pin_touched != 2)
  2029  009C  3002               	movlw	2
  2030  009D  0020               	movlb	0	; select bank0
  2031  009E  0664               	xorwf	_last_pin_touched,w
  2032  009F  0465               	iorwf	_last_pin_touched+1,w
  2033  00A0  1903               	btfsc	3,2
  2034  00A1  28BA               	goto	i1l1519
  2035                           
  2036                           ;mainSrc.c: 165: {
  2037                           ;mainSrc.c: 166: last_pin_touched = 2;
  2038  00A2  3002               	movlw	2
  2039  00A3  00E4               	movwf	_last_pin_touched
  2040  00A4  3000               	movlw	0
  2041  00A5  00E5               	movwf	_last_pin_touched+1
  2042                           
  2043                           ;mainSrc.c: 167: lightLed();
  2044  00A6  3185  25E3  3180   	fcall	_lightLed
  2045                           
  2046                           ;mainSrc.c: 168: disableCCP1Out();
  2047  00A9  3185  25E9  3180   	fcall	_disableCCP1Out
  2048                           
  2049                           ;mainSrc.c: 171: PR2 = 0b10011110;
  2050  00AC  309E               	movlw	158
  2051  00AD  0020               	movlb	0	; select bank0
  2052  00AE  009B               	movwf	27	;volatile
  2053                           
  2054                           ;mainSrc.c: 172: CCP1CON = 0b00011100;
  2055  00AF  301C               	movlw	28
  2056  00B0  0025               	movlb	5	; select bank5
  2057  00B1  0093               	movwf	19	;volatile
  2058                           
  2059                           ;mainSrc.c: 173: CCPR1L = 0b01001111;
  2060  00B2  304F               	movlw	79
  2061  00B3  0091               	movwf	17	;volatile
  2062                           
  2063                           ;mainSrc.c: 176: waitTimer2();
  2064  00B4  3185  25DA  3180   	fcall	_waitTimer2
  2065                           
  2066                           ;mainSrc.c: 179: enableCCP1Out();
  2067  00B7  3185  25EC  3180   	fcall	_enableCCP1Out
  2068  00BA                     i1l1519:	
  2069                           
  2070                           ;mainSrc.c: 180: }
  2071                           ;mainSrc.c: 181: step_count = 0;
  2072  00BA  0020               	movlb	0	; select bank0
  2073  00BB  01E0               	clrf	_step_count
  2074  00BC  01E1               	clrf	_step_count+1
  2075                           
  2076                           ;mainSrc.c: 182: }
  2077  00BD  28CE               	goto	i1l1525
  2078  00BE                     i1l1521:	
  2079                           
  2080                           ;mainSrc.c: 183: else
  2081                           ;mainSrc.c: 184: {
  2082                           ;mainSrc.c: 185: step_count++;
  2083  00BE  3001               	movlw	1
  2084  00BF  0020               	movlb	0	; select bank0
  2085  00C0  07E0               	addwf	_step_count,f
  2086  00C1  3000               	movlw	0
  2087  00C2  3DE1               	addwfc	_step_count+1,f
  2088                           
  2089                           ;mainSrc.c: 186: if(step_count == MAX_STEP_SOUND_LENGTH)
  2090  00C3  0863               	movf	_MAX_STEP_SOUND_LENGTH+1,w
  2091  00C4  0661               	xorwf	_step_count+1,w
  2092  00C5  1D03               	skipz
  2093  00C6  28C9               	goto	u172_25
  2094  00C7  0862               	movf	_MAX_STEP_SOUND_LENGTH,w
  2095  00C8  0660               	xorwf	_step_count,w
  2096  00C9                     u172_25:	
  2097  00C9  1D03               	skipz
  2098  00CA  28CE               	goto	i1l1525
  2099                           
  2100                           ;mainSrc.c: 187: {
  2101                           ;mainSrc.c: 188: finishNote();
  2102  00CB  3185  25C4  3180   	fcall	_finishNote
  2103  00CE                     i1l1525:	
  2104                           
  2105                           ;mainSrc.c: 189: }
  2106                           ;mainSrc.c: 190: }
  2107                           ;mainSrc.c: 191: CPSCON1bits.CPSCH = 0b0011;
  2108  00CE  0020               	movlb	0	; select bank0
  2109  00CF  081F               	movf	31,w	;volatile
  2110  00D0  39F8               	andlw	-8
  2111  00D1  3803               	iorlw	3
  2112  00D2  299B               	goto	L5
  2113  00D3                     i1l1527:	
  2114                           ;mainSrc.c: 194: case 3 :
  2115                           
  2116                           ;mainSrc.c: 192: break;
  2117                           
  2118                           
  2119                           ;mainSrc.c: 195: if(new_frequency < threshold_frequency)
  2120  00D3  087A               	movf	_new_frequency+1,w
  2121  00D4  3A80               	xorlw	128
  2122  00D5  00F7               	movwf	??_isr
  2123  00D6  087C               	movf	_threshold_frequency+1,w
  2124  00D7  3A80               	xorlw	128
  2125  00D8  0277               	subwf	??_isr,w
  2126  00D9  1D03               	skipz
  2127  00DA  28DD               	goto	u173_25
  2128  00DB  087B               	movf	_threshold_frequency,w
  2129  00DC  0279               	subwf	_new_frequency,w
  2130  00DD                     u173_25:	
  2131  00DD  1803               	skipnc
  2132  00DE  2901               	goto	i1l1543
  2133                           
  2134                           ;mainSrc.c: 196: {
  2135                           ;mainSrc.c: 197: if(last_pin_touched != 3)
  2136  00DF  3003               	movlw	3
  2137  00E0  0020               	movlb	0	; select bank0
  2138  00E1  0664               	xorwf	_last_pin_touched,w
  2139  00E2  0465               	iorwf	_last_pin_touched+1,w
  2140  00E3  1903               	btfsc	3,2
  2141  00E4  28FD               	goto	i1l1541
  2142                           
  2143                           ;mainSrc.c: 198: {
  2144                           ;mainSrc.c: 199: last_pin_touched = 3;
  2145  00E5  3003               	movlw	3
  2146  00E6  00E4               	movwf	_last_pin_touched
  2147  00E7  3000               	movlw	0
  2148  00E8  00E5               	movwf	_last_pin_touched+1
  2149                           
  2150                           ;mainSrc.c: 200: lightLed();
  2151  00E9  3185  25E3  3180   	fcall	_lightLed
  2152                           
  2153                           ;mainSrc.c: 201: disableCCP1Out();
  2154  00EC  3185  25E9  3180   	fcall	_disableCCP1Out
  2155                           
  2156                           ;mainSrc.c: 204: PR2 = 0b10110010;
  2157  00EF  30B2               	movlw	178
  2158  00F0  0020               	movlb	0	; select bank0
  2159  00F1  009B               	movwf	27	;volatile
  2160                           
  2161                           ;mainSrc.c: 205: CCP1CON = 0b00011100;
  2162  00F2  301C               	movlw	28
  2163  00F3  0025               	movlb	5	; select bank5
  2164  00F4  0093               	movwf	19	;volatile
  2165                           
  2166                           ;mainSrc.c: 206: CCPR1L = 0b01011001;
  2167  00F5  3059               	movlw	89
  2168  00F6  0091               	movwf	17	;volatile
  2169                           
  2170                           ;mainSrc.c: 209: waitTimer2();
  2171  00F7  3185  25DA  3180   	fcall	_waitTimer2
  2172                           
  2173                           ;mainSrc.c: 212: enableCCP1Out();
  2174  00FA  3185  25EC  3180   	fcall	_enableCCP1Out
  2175  00FD                     i1l1541:	
  2176                           
  2177                           ;mainSrc.c: 213: }
  2178                           ;mainSrc.c: 214: step_count = 0;
  2179  00FD  0020               	movlb	0	; select bank0
  2180  00FE  01E0               	clrf	_step_count
  2181  00FF  01E1               	clrf	_step_count+1
  2182                           
  2183                           ;mainSrc.c: 215: }
  2184  0100  2911               	goto	i1l1547
  2185  0101                     i1l1543:	
  2186                           
  2187                           ;mainSrc.c: 216: else
  2188                           ;mainSrc.c: 217: {
  2189                           ;mainSrc.c: 218: step_count++;
  2190  0101  3001               	movlw	1
  2191  0102  0020               	movlb	0	; select bank0
  2192  0103  07E0               	addwf	_step_count,f
  2193  0104  3000               	movlw	0
  2194  0105  3DE1               	addwfc	_step_count+1,f
  2195                           
  2196                           ;mainSrc.c: 219: if(step_count == MAX_STEP_SOUND_LENGTH)
  2197  0106  0863               	movf	_MAX_STEP_SOUND_LENGTH+1,w
  2198  0107  0661               	xorwf	_step_count+1,w
  2199  0108  1D03               	skipz
  2200  0109  290C               	goto	u175_25
  2201  010A  0862               	movf	_MAX_STEP_SOUND_LENGTH,w
  2202  010B  0660               	xorwf	_step_count,w
  2203  010C                     u175_25:	
  2204  010C  1D03               	skipz
  2205  010D  2911               	goto	i1l1547
  2206                           
  2207                           ;mainSrc.c: 220: {
  2208                           ;mainSrc.c: 221: finishNote();
  2209  010E  3185  25C4  3180   	fcall	_finishNote
  2210  0111                     i1l1547:	
  2211                           
  2212                           ;mainSrc.c: 222: }
  2213                           ;mainSrc.c: 223: }
  2214                           ;mainSrc.c: 224: CPSCON1bits.CPSCH = 0b0100;
  2215  0111  0020               	movlb	0	; select bank0
  2216  0112  081F               	movf	31,w	;volatile
  2217  0113  39F8               	andlw	-8
  2218  0114  3804               	iorlw	4
  2219  0115  299B               	goto	L5
  2220  0116                     i1l1549:	
  2221                           ;mainSrc.c: 227: case 4 :
  2222                           
  2223                           ;mainSrc.c: 225: break;
  2224                           
  2225                           
  2226                           ;mainSrc.c: 228: if(new_frequency < threshold_frequency)
  2227  0116  087A               	movf	_new_frequency+1,w
  2228  0117  3A80               	xorlw	128
  2229  0118  00F7               	movwf	??_isr
  2230  0119  087C               	movf	_threshold_frequency+1,w
  2231  011A  3A80               	xorlw	128
  2232  011B  0277               	subwf	??_isr,w
  2233  011C  1D03               	skipz
  2234  011D  2920               	goto	u176_25
  2235  011E  087B               	movf	_threshold_frequency,w
  2236  011F  0279               	subwf	_new_frequency,w
  2237  0120                     u176_25:	
  2238  0120  1803               	skipnc
  2239  0121  2944               	goto	i1l1565
  2240                           
  2241                           ;mainSrc.c: 229: {
  2242                           ;mainSrc.c: 230: if(last_pin_touched != 4)
  2243  0122  3004               	movlw	4
  2244  0123  0020               	movlb	0	; select bank0
  2245  0124  0664               	xorwf	_last_pin_touched,w
  2246  0125  0465               	iorwf	_last_pin_touched+1,w
  2247  0126  1903               	btfsc	3,2
  2248  0127  2940               	goto	i1l1563
  2249                           
  2250                           ;mainSrc.c: 231: {
  2251                           ;mainSrc.c: 232: last_pin_touched = 4;
  2252  0128  3004               	movlw	4
  2253  0129  00E4               	movwf	_last_pin_touched
  2254  012A  3000               	movlw	0
  2255  012B  00E5               	movwf	_last_pin_touched+1
  2256                           
  2257                           ;mainSrc.c: 233: lightLed();
  2258  012C  3185  25E3  3180   	fcall	_lightLed
  2259                           
  2260                           ;mainSrc.c: 234: disableCCP1Out();
  2261  012F  3185  25E9  3180   	fcall	_disableCCP1Out
  2262                           
  2263                           ;mainSrc.c: 237: PR2 = 0b10111100;
  2264  0132  30BC               	movlw	188
  2265  0133  0020               	movlb	0	; select bank0
  2266  0134  009B               	movwf	27	;volatile
  2267                           
  2268                           ;mainSrc.c: 238: CCP1CON = 0b00011100;
  2269  0135  301C               	movlw	28
  2270  0136  0025               	movlb	5	; select bank5
  2271  0137  0093               	movwf	19	;volatile
  2272                           
  2273                           ;mainSrc.c: 239: CCPR1L = 0b01011110;
  2274  0138  305E               	movlw	94
  2275  0139  0091               	movwf	17	;volatile
  2276                           
  2277                           ;mainSrc.c: 242: waitTimer2();
  2278  013A  3185  25DA  3180   	fcall	_waitTimer2
  2279                           
  2280                           ;mainSrc.c: 245: enableCCP1Out();
  2281  013D  3185  25EC  3180   	fcall	_enableCCP1Out
  2282  0140                     i1l1563:	
  2283                           
  2284                           ;mainSrc.c: 246: }
  2285                           ;mainSrc.c: 247: step_count = 0;
  2286  0140  0020               	movlb	0	; select bank0
  2287  0141  01E0               	clrf	_step_count
  2288  0142  01E1               	clrf	_step_count+1
  2289                           
  2290                           ;mainSrc.c: 248: }
  2291  0143  2954               	goto	i1l1569
  2292  0144                     i1l1565:	
  2293                           
  2294                           ;mainSrc.c: 249: else
  2295                           ;mainSrc.c: 250: {
  2296                           ;mainSrc.c: 251: step_count++;
  2297  0144  3001               	movlw	1
  2298  0145  0020               	movlb	0	; select bank0
  2299  0146  07E0               	addwf	_step_count,f
  2300  0147  3000               	movlw	0
  2301  0148  3DE1               	addwfc	_step_count+1,f
  2302                           
  2303                           ;mainSrc.c: 252: if(step_count == MAX_STEP_SOUND_LENGTH)
  2304  0149  0863               	movf	_MAX_STEP_SOUND_LENGTH+1,w
  2305  014A  0661               	xorwf	_step_count+1,w
  2306  014B  1D03               	skipz
  2307  014C  294F               	goto	u178_25
  2308  014D  0862               	movf	_MAX_STEP_SOUND_LENGTH,w
  2309  014E  0660               	xorwf	_step_count,w
  2310  014F                     u178_25:	
  2311  014F  1D03               	skipz
  2312  0150  2954               	goto	i1l1569
  2313                           
  2314                           ;mainSrc.c: 253: {
  2315                           ;mainSrc.c: 254: finishNote();
  2316  0151  3185  25C4  3180   	fcall	_finishNote
  2317  0154                     i1l1569:	
  2318                           
  2319                           ;mainSrc.c: 255: }
  2320                           ;mainSrc.c: 256: }
  2321                           ;mainSrc.c: 257: CPSCON1bits.CPSCH = 0b0101;
  2322  0154  0020               	movlb	0	; select bank0
  2323  0155  081F               	movf	31,w	;volatile
  2324  0156  39F8               	andlw	-8
  2325  0157  3805               	iorlw	5
  2326  0158  299B               	goto	L5
  2327  0159                     i1l1571:	
  2328                           ;mainSrc.c: 260: case 5 :
  2329                           
  2330                           ;mainSrc.c: 258: break;
  2331                           
  2332                           
  2333                           ;mainSrc.c: 261: if(new_frequency < threshold_frequency)
  2334  0159  087A               	movf	_new_frequency+1,w
  2335  015A  3A80               	xorlw	128
  2336  015B  00F7               	movwf	??_isr
  2337  015C  087C               	movf	_threshold_frequency+1,w
  2338  015D  3A80               	xorlw	128
  2339  015E  0277               	subwf	??_isr,w
  2340  015F  1D03               	skipz
  2341  0160  2963               	goto	u179_25
  2342  0161  087B               	movf	_threshold_frequency,w
  2343  0162  0279               	subwf	_new_frequency,w
  2344  0163                     u179_25:	
  2345  0163  1803               	skipnc
  2346  0164  2987               	goto	i1l1587
  2347                           
  2348                           ;mainSrc.c: 262: {
  2349                           ;mainSrc.c: 263: if(last_pin_touched != 5)
  2350  0165  3005               	movlw	5
  2351  0166  0020               	movlb	0	; select bank0
  2352  0167  0664               	xorwf	_last_pin_touched,w
  2353  0168  0465               	iorwf	_last_pin_touched+1,w
  2354  0169  1903               	btfsc	3,2
  2355  016A  2983               	goto	i1l1585
  2356                           
  2357                           ;mainSrc.c: 264: {
  2358                           ;mainSrc.c: 265: last_pin_touched = 5;
  2359  016B  3005               	movlw	5
  2360  016C  00E4               	movwf	_last_pin_touched
  2361  016D  3000               	movlw	0
  2362  016E  00E5               	movwf	_last_pin_touched+1
  2363                           
  2364                           ;mainSrc.c: 266: lightLed();
  2365  016F  3185  25E3  3180   	fcall	_lightLed
  2366                           
  2367                           ;mainSrc.c: 267: disableCCP1Out();
  2368  0172  3185  25E9  3180   	fcall	_disableCCP1Out
  2369                           
  2370                           ;mainSrc.c: 270: PR2 = 0b11010100;
  2371  0175  30D4               	movlw	212
  2372  0176  0020               	movlb	0	; select bank0
  2373  0177  009B               	movwf	27	;volatile
  2374                           
  2375                           ;mainSrc.c: 271: CCP1CON = 0b00011100;
  2376  0178  301C               	movlw	28
  2377  0179  0025               	movlb	5	; select bank5
  2378  017A  0093               	movwf	19	;volatile
  2379                           
  2380                           ;mainSrc.c: 272: CCPR1L = 0b01101010;
  2381  017B  306A               	movlw	106
  2382  017C  0091               	movwf	17	;volatile
  2383                           
  2384                           ;mainSrc.c: 275: waitTimer2();
  2385  017D  3185  25DA  3180   	fcall	_waitTimer2
  2386                           
  2387                           ;mainSrc.c: 278: enableCCP1Out();
  2388  0180  3185  25EC  3180   	fcall	_enableCCP1Out
  2389  0183                     i1l1585:	
  2390                           
  2391                           ;mainSrc.c: 279: }
  2392                           ;mainSrc.c: 280: step_count = 0;
  2393  0183  0020               	movlb	0	; select bank0
  2394  0184  01E0               	clrf	_step_count
  2395  0185  01E1               	clrf	_step_count+1
  2396                           
  2397                           ;mainSrc.c: 281: }
  2398  0186  2997               	goto	i1l1591
  2399  0187                     i1l1587:	
  2400                           
  2401                           ;mainSrc.c: 282: else
  2402                           ;mainSrc.c: 283: {
  2403                           ;mainSrc.c: 284: step_count++;
  2404  0187  3001               	movlw	1
  2405  0188  0020               	movlb	0	; select bank0
  2406  0189  07E0               	addwf	_step_count,f
  2407  018A  3000               	movlw	0
  2408  018B  3DE1               	addwfc	_step_count+1,f
  2409                           
  2410                           ;mainSrc.c: 285: if(step_count == MAX_STEP_SOUND_LENGTH)
  2411  018C  0863               	movf	_MAX_STEP_SOUND_LENGTH+1,w
  2412  018D  0661               	xorwf	_step_count+1,w
  2413  018E  1D03               	skipz
  2414  018F  2992               	goto	u181_25
  2415  0190  0862               	movf	_MAX_STEP_SOUND_LENGTH,w
  2416  0191  0660               	xorwf	_step_count,w
  2417  0192                     u181_25:	
  2418  0192  1D03               	skipz
  2419  0193  2997               	goto	i1l1591
  2420                           
  2421                           ;mainSrc.c: 286: {
  2422                           ;mainSrc.c: 287: finishNote();
  2423  0194  3185  25C4  3180   	fcall	_finishNote
  2424  0197                     i1l1591:	
  2425                           
  2426                           ;mainSrc.c: 288: }
  2427                           ;mainSrc.c: 289: }
  2428                           ;mainSrc.c: 290: CPSCON1bits.CPSCH = 0b0110;
  2429  0197  0020               	movlb	0	; select bank0
  2430  0198  081F               	movf	31,w	;volatile
  2431  0199  39F8               	andlw	-8
  2432  019A  3806               	iorlw	6
  2433  019B                     L5:	
  2434  019B  009F               	movwf	31	;volatile
  2435                           
  2436                           ;mainSrc.c: 291: break;
  2437  019C  29EE               	goto	i1l1619
  2438  019D                     i1l1593:	
  2439                           ;mainSrc.c: 293: case 6 :
  2440                           
  2441                           
  2442                           ;mainSrc.c: 294: if(new_frequency < threshold_frequency)
  2443  019D  087A               	movf	_new_frequency+1,w
  2444  019E  3A80               	xorlw	128
  2445  019F  00F7               	movwf	??_isr
  2446  01A0  087C               	movf	_threshold_frequency+1,w
  2447  01A1  3A80               	xorlw	128
  2448  01A2  0277               	subwf	??_isr,w
  2449  01A3  1D03               	skipz
  2450  01A4  29A7               	goto	u182_25
  2451  01A5  087B               	movf	_threshold_frequency,w
  2452  01A6  0279               	subwf	_new_frequency,w
  2453  01A7                     u182_25:	
  2454  01A7  1803               	skipnc
  2455  01A8  29CB               	goto	i1l1609
  2456                           
  2457                           ;mainSrc.c: 295: {
  2458                           ;mainSrc.c: 296: if(last_pin_touched != 6)
  2459  01A9  3006               	movlw	6
  2460  01AA  0020               	movlb	0	; select bank0
  2461  01AB  0664               	xorwf	_last_pin_touched,w
  2462  01AC  0465               	iorwf	_last_pin_touched+1,w
  2463  01AD  1903               	btfsc	3,2
  2464  01AE  29C7               	goto	i1l1607
  2465                           
  2466                           ;mainSrc.c: 297: {
  2467                           ;mainSrc.c: 298: last_pin_touched = 6;
  2468  01AF  3006               	movlw	6
  2469  01B0  00E4               	movwf	_last_pin_touched
  2470  01B1  3000               	movlw	0
  2471  01B2  00E5               	movwf	_last_pin_touched+1
  2472                           
  2473                           ;mainSrc.c: 299: lightLed();
  2474  01B3  3185  25E3  3180   	fcall	_lightLed
  2475                           
  2476                           ;mainSrc.c: 300: disableCCP1Out();
  2477  01B6  3185  25E9  3180   	fcall	_disableCCP1Out
  2478                           
  2479                           ;mainSrc.c: 303: PR2 = 0b11101110;
  2480  01B9  30EE               	movlw	238
  2481  01BA  0020               	movlb	0	; select bank0
  2482  01BB  009B               	movwf	27	;volatile
  2483                           
  2484                           ;mainSrc.c: 304: CCP1CON = 0b00011100;
  2485  01BC  301C               	movlw	28
  2486  01BD  0025               	movlb	5	; select bank5
  2487  01BE  0093               	movwf	19	;volatile
  2488                           
  2489                           ;mainSrc.c: 305: CCPR1L = 0b01110111;
  2490  01BF  3077               	movlw	119
  2491  01C0  0091               	movwf	17	;volatile
  2492                           
  2493                           ;mainSrc.c: 308: waitTimer2();
  2494  01C1  3185  25DA  3180   	fcall	_waitTimer2
  2495                           
  2496                           ;mainSrc.c: 311: enableCCP1Out();
  2497  01C4  3185  25EC  3180   	fcall	_enableCCP1Out
  2498  01C7                     i1l1607:	
  2499                           
  2500                           ;mainSrc.c: 312: }
  2501                           ;mainSrc.c: 313: step_count = 0;
  2502  01C7  0020               	movlb	0	; select bank0
  2503  01C8  01E0               	clrf	_step_count
  2504  01C9  01E1               	clrf	_step_count+1
  2505                           
  2506                           ;mainSrc.c: 314: }
  2507  01CA  29DB               	goto	i1l1613
  2508  01CB                     i1l1609:	
  2509                           
  2510                           ;mainSrc.c: 315: else
  2511                           ;mainSrc.c: 316: {
  2512                           ;mainSrc.c: 317: step_count++;
  2513  01CB  3001               	movlw	1
  2514  01CC  0020               	movlb	0	; select bank0
  2515  01CD  07E0               	addwf	_step_count,f
  2516  01CE  3000               	movlw	0
  2517  01CF  3DE1               	addwfc	_step_count+1,f
  2518                           
  2519                           ;mainSrc.c: 318: if(step_count == MAX_STEP_SOUND_LENGTH)
  2520  01D0  0863               	movf	_MAX_STEP_SOUND_LENGTH+1,w
  2521  01D1  0661               	xorwf	_step_count+1,w
  2522  01D2  1D03               	skipz
  2523  01D3  29D6               	goto	u184_25
  2524  01D4  0862               	movf	_MAX_STEP_SOUND_LENGTH,w
  2525  01D5  0660               	xorwf	_step_count,w
  2526  01D6                     u184_25:	
  2527  01D6  1D03               	skipz
  2528  01D7  29DB               	goto	i1l1613
  2529                           
  2530                           ;mainSrc.c: 319: {
  2531                           ;mainSrc.c: 320: finishNote();
  2532  01D8  3185  25C4  3180   	fcall	_finishNote
  2533  01DB                     i1l1613:	
  2534                           
  2535                           ;mainSrc.c: 321: }
  2536                           ;mainSrc.c: 322: }
  2537                           ;mainSrc.c: 323: CPSCON1bits.CPSCH = 0b0000;
  2538  01DB  30F8               	movlw	-8
  2539  01DC  0020               	movlb	0	; select bank0
  2540  01DD  059F               	andwf	31,f	;volatile
  2541                           
  2542                           ;mainSrc.c: 325: }
  2543                           
  2544                           ;mainSrc.c: 324: break;
  2545  01DE  29EE               	goto	i1l1619
  2546  01DF                     i1l1617:	
  2547                           
  2548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2549                           ; Switch size 1, requested type "space"
  2550                           ; Number of cases is 1, Range of values is 0 to 0
  2551                           ; switch strategies available:
  2552                           ; Name         Instructions Cycles
  2553                           ; simple_byte            4     3 (average)
  2554                           ; direct_byte            8     6 (fixed)
  2555                           ; jumptable            260     6 (fixed)
  2556                           ;	Chosen strategy is simple_byte
  2557  01DF  085F               	movf	_selected_cps_pin+1,w
  2558  01E0  3A00               	xorlw	0	; case 0
  2559  01E1  1903               	skipnz
  2560  01E2  29E4               	goto	i1l1761
  2561  01E3  29EE               	goto	i1l1619
  2562  01E4                     i1l1761:	
  2563                           
  2564                           ; Switch size 1, requested type "space"
  2565                           ; Number of cases is 7, Range of values is 0 to 6
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; direct_byte           20     6 (fixed)
  2569                           ; simple_byte           22    12 (average)
  2570                           ; jumptable            260     6 (fixed)
  2571                           ;	Chosen strategy is direct_byte
  2572  01E4  085E               	movf	_selected_cps_pin,w
  2573  01E5  0084               	movwf	4
  2574  01E6  3007               	movlw	7
  2575  01E7  0204               	subwf	4,w
  2576  01E8  1803               	skipnc
  2577  01E9  29EE               	goto	i1l1619
  2578  01EA  3185               	movlp	high i1S1763
  2579  01EB  3504               	lslf	4,w
  2580  01EC  3EB6               	addlw	low i1S1763
  2581  01ED  0082               	movwf	2
  2582  01EE                     i1l1619:	
  2583                           
  2584                           ;mainSrc.c: 326: selected_cps_pin = (selected_cps_pin + 1) % 7;
  2585  01EE  3007               	movlw	7
  2586  01EF  00F0               	movwf	___awmod@divisor
  2587  01F0  3000               	movlw	0
  2588  01F1  00F1               	movwf	___awmod@divisor+1
  2589  01F2  085E               	movf	_selected_cps_pin,w
  2590  01F3  3E01               	addlw	1
  2591  01F4  00F2               	movwf	___awmod@dividend
  2592  01F5  3000               	movlw	0
  2593  01F6  3D5F               	addwfc	_selected_cps_pin+1,w
  2594  01F7  00F3               	movwf	___awmod@dividend+1
  2595  01F8  3185  254F         	fcall	___awmod
  2596  01FA  0871               	movf	?___awmod+1,w
  2597  01FB  0020               	movlb	0	; select bank0
  2598  01FC  00DF               	movwf	_selected_cps_pin+1
  2599  01FD  0870               	movf	?___awmod,w
  2600  01FE  00DE               	movwf	_selected_cps_pin
  2601                           
  2602                           ;mainSrc.c: 328: T1CONbits.TMR1ON = 0;
  2603  01FF  1018               	bcf	24,0	;volatile
  2604                           
  2605                           ;mainSrc.c: 329: TMR1L = 0;
  2606  0200  0196               	clrf	22	;volatile
  2607                           
  2608                           ;mainSrc.c: 331: TMR0 = 0;
  2609  0201  0195               	clrf	21	;volatile
  2610                           
  2611                           ;mainSrc.c: 333: TMR1H = 0;
  2612  0202  0197               	clrf	23	;volatile
  2613                           
  2614                           ;mainSrc.c: 334: T1CONbits.TMR1ON = 1;
  2615  0203  1418               	bsf	24,0	;volatile
  2616                           
  2617                           ;mainSrc.c: 336: INTCONbits.T0IF = 0;
  2618  0204  110B               	bcf	11,2	;volatile
  2619  0205                     i1l122:	
  2620  0205  0878               	movf	??_isr+1,w
  2621  0206  00FF               	movwf	127
  2622  0207  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2623  0208  0009               	retfie
  2624  0209                     __end_of_isr:	
  2625                           
  2626                           	psect	swtext1
  2627  05B6                     __pswtext1:	
  2628  05B6                     i1S1763:	
  2629  05B6  3180  2810         	ljmp	i1l1449
  2630  05B8  3180  2850         	ljmp	i1l1477
  2631  05BA  3180  2890         	ljmp	i1l1505
  2632  05BC  3180  28D3         	ljmp	i1l1527
  2633  05BE  3181  2916         	ljmp	i1l1549
  2634  05C0  3181  2959         	ljmp	i1l1571
  2635  05C2  3181  299D         	ljmp	i1l1593
  2636                           
  2637                           	psect	text8
  2638  05DA                     __ptext8:	
  2639 ;; *************** function _waitTimer2 *****************
  2640 ;; Defined at:
  2641 ;;		line 31 in file "mainSrc.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;		None               void
  2648 ;; Registers used:
  2649 ;;		None
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_isr
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _waitTimer2
  2670  05DA                     _waitTimer2:	
  2671                           
  2672                           ;mainSrc.c: 33: PIR1bits.TMR2IF = 0;
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in _waitTimer2: []
  2676  05DA  0020               	movlb	0	; select bank0
  2677  05DB  1091               	bcf	17,1	;volatile
  2678  05DC                     i1l63:	
  2679                           ;mainSrc.c: 35: {
  2680                           ;mainSrc.c: 36: continue;
  2681                           
  2682                           ;mainSrc.c: 34: while(PIR1bits.TMR2IF == 0)
  2683                           
  2684  05DC  1891               	btfsc	17,1	;volatile
  2685  05DD  0008               	return
  2686  05DE  2DDC               	goto	i1l63
  2687  05DF                     __end_of_waitTimer2:	
  2688                           
  2689                           	psect	text9
  2690  05E3                     __ptext9:	
  2691 ;; *************** function _lightLed *****************
  2692 ;; Defined at:
  2693 ;;		line 50 in file "mainSrc.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;		None               void
  2700 ;; Registers used:
  2701 ;;		None
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_isr
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _lightLed
  2722  05E3                     _lightLed:	
  2723                           
  2724                           ;mainSrc.c: 52: PORTCbits.RC4 = 1;
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _lightLed: []
  2728  05E3  0020               	movlb	0	; select bank0
  2729  05E4  160E               	bsf	14,4	;volatile
  2730  05E5  0008               	return
  2731  05E6                     __end_of_lightLed:	
  2732                           
  2733                           	psect	text10
  2734  05C4                     __ptext10:	
  2735 ;; *************** function _finishNote *****************
  2736 ;; Defined at:
  2737 ;;		line 60 in file "mainSrc.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, pclath, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		_disableCCP1Out
  2760 ;;		_disableLed
  2761 ;; This function is called by:
  2762 ;;		_isr
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function _finishNote
  2768  05C4                     _finishNote:	
  2769                           
  2770                           ;mainSrc.c: 62: disableLed();
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in _finishNote: [wreg+status,2+status,0+pclath+cstack]
  2774  05C4  3185  25E6  3185   	fcall	_disableLed
  2775                           
  2776                           ;mainSrc.c: 63: disableCCP1Out();
  2777  05C7  3185  25E9         	fcall	_disableCCP1Out
  2778                           
  2779                           ;mainSrc.c: 64: last_pin_touched = -1;
  2780  05C9  30FF               	movlw	255
  2781  05CA  0020               	movlb	0	; select bank0
  2782  05CB  00E4               	movwf	_last_pin_touched
  2783  05CC  30FF               	movlw	255
  2784  05CD  00E5               	movwf	_last_pin_touched+1
  2785                           
  2786                           ;mainSrc.c: 65: step_count = 0;
  2787  05CE  01E0               	clrf	_step_count
  2788  05CF  01E1               	clrf	_step_count+1
  2789  05D0  0008               	return
  2790  05D1                     __end_of_finishNote:	
  2791                           
  2792                           	psect	text11
  2793  05E6                     __ptext11:	
  2794 ;; *************** function _disableLed *****************
  2795 ;; Defined at:
  2796 ;;		line 55 in file "mainSrc.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		None
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_finishNote
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _disableLed
  2825  05E6                     _disableLed:	
  2826                           
  2827                           ;mainSrc.c: 57: PORTCbits.RC4 = 0;
  2828                           
  2829                           ;incstack = 0
  2830                           ; Regs used in _disableLed: []
  2831  05E6  0020               	movlb	0	; select bank0
  2832  05E7  120E               	bcf	14,4	;volatile
  2833  05E8  0008               	return
  2834  05E9                     __end_of_disableLed:	
  2835                           
  2836                           	psect	text12
  2837  05E9                     __ptext12:	
  2838 ;; *************** function _disableCCP1Out *****************
  2839 ;; Defined at:
  2840 ;;		line 45 in file "mainSrc.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;		None               void
  2847 ;; Registers used:
  2848 ;;		None
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_finishNote
  2864 ;;		_isr
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _disableCCP1Out
  2870  05E9                     _disableCCP1Out:	
  2871                           
  2872                           ;mainSrc.c: 47: TRISCbits.TRISC5 = 1;
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _disableCCP1Out: []
  2876  05E9  0021               	movlb	1	; select bank1
  2877  05EA  168E               	bsf	14,5	;volatile
  2878  05EB  0008               	return
  2879  05EC                     __end_of_disableCCP1Out:	
  2880                           
  2881                           	psect	text13
  2882  05EC                     __ptext13:	
  2883 ;; *************** function _enableCCP1Out *****************
  2884 ;; Defined at:
  2885 ;;		line 40 in file "mainSrc.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;		None               void
  2892 ;; Registers used:
  2893 ;;		None
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_isr
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           
  2913                           ;psect for function _enableCCP1Out
  2914  05EC                     _enableCCP1Out:	
  2915                           
  2916                           ;mainSrc.c: 42: TRISCbits.TRISC5 = 0;
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _enableCCP1Out: []
  2920  05EC  0021               	movlb	1	; select bank1
  2921  05ED  128E               	bcf	14,5	;volatile
  2922  05EE  0008               	return
  2923  05EF                     __end_of_enableCCP1Out:	
  2924                           
  2925                           	psect	text14
  2926  054F                     __ptext14:	
  2927 ;; *************** function ___awmod *****************
  2928 ;; Defined at:
  2929 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  divisor         2    0[COMMON] int 
  2932 ;;  dividend        2    2[COMMON] int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  sign            1    6[COMMON] unsigned char 
  2935 ;;  counter         1    5[COMMON] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2    0[COMMON] int 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;Total ram usage:        7 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_isr
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function ___awmod
  2960  054F                     ___awmod:	
  2961                           
  2962                           ;incstack = 0
  2963                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2964  054F  01F6               	clrf	___awmod@sign
  2965  0550  1FF3               	btfss	___awmod@dividend+1,7
  2966  0551  2D59               	goto	i1l1233
  2967  0552  09F2               	comf	___awmod@dividend,f
  2968  0553  09F3               	comf	___awmod@dividend+1,f
  2969  0554  0AF2               	incf	___awmod@dividend,f
  2970  0555  1903               	skipnz
  2971  0556  0AF3               	incf	___awmod@dividend+1,f
  2972  0557  01F6               	clrf	___awmod@sign
  2973  0558  0AF6               	incf	___awmod@sign,f
  2974  0559                     i1l1233:	
  2975  0559  1FF1               	btfss	___awmod@divisor+1,7
  2976  055A  2D60               	goto	i1l1237
  2977  055B  09F0               	comf	___awmod@divisor,f
  2978  055C  09F1               	comf	___awmod@divisor+1,f
  2979  055D  0AF0               	incf	___awmod@divisor,f
  2980  055E  1903               	skipnz
  2981  055F  0AF1               	incf	___awmod@divisor+1,f
  2982  0560                     i1l1237:	
  2983  0560  0870               	movf	___awmod@divisor,w
  2984  0561  0471               	iorwf	___awmod@divisor+1,w
  2985  0562  1903               	btfsc	3,2
  2986  0563  2D87               	goto	i1l1255
  2987  0564  01F5               	clrf	___awmod@counter
  2988  0565  0AF5               	incf	___awmod@counter,f
  2989  0566                     i1l1245:	
  2990  0566  1BF1               	btfsc	___awmod@divisor+1,7
  2991  0567  2D72               	goto	i1l1247
  2992  0568  3001               	movlw	1
  2993  0569                     u110_25:	
  2994  0569  35F0               	lslf	___awmod@divisor,f
  2995  056A  0DF1               	rlf	___awmod@divisor+1,f
  2996  056B  0B89               	decfsz	9,f
  2997  056C  2D69               	goto	u110_25
  2998  056D  3001               	movlw	1
  2999  056E  00F4               	movwf	??___awmod
  3000  056F  0874               	movf	??___awmod,w
  3001  0570  07F5               	addwf	___awmod@counter,f
  3002  0571  2D66               	goto	i1l1245
  3003  0572                     i1l1247:	
  3004  0572  0871               	movf	___awmod@divisor+1,w
  3005  0573  0273               	subwf	___awmod@dividend+1,w
  3006  0574  1D03               	skipz
  3007  0575  2D78               	goto	u112_25
  3008  0576  0870               	movf	___awmod@divisor,w
  3009  0577  0272               	subwf	___awmod@dividend,w
  3010  0578                     u112_25:	
  3011  0578  1C03               	skipc
  3012  0579  2D7E               	goto	i1l1251
  3013  057A  0870               	movf	___awmod@divisor,w
  3014  057B  02F2               	subwf	___awmod@dividend,f
  3015  057C  0871               	movf	___awmod@divisor+1,w
  3016  057D  3BF3               	subwfb	___awmod@dividend+1,f
  3017  057E                     i1l1251:	
  3018  057E  3001               	movlw	1
  3019  057F                     u113_25:	
  3020  057F  36F1               	lsrf	___awmod@divisor+1,f
  3021  0580  0CF0               	rrf	___awmod@divisor,f
  3022  0581  0B89               	decfsz	9,f
  3023  0582  2D7F               	goto	u113_25
  3024  0583  3001               	movlw	1
  3025  0584  02F5               	subwf	___awmod@counter,f
  3026  0585  1D03               	btfss	3,2
  3027  0586  2D72               	goto	i1l1247
  3028  0587                     i1l1255:	
  3029  0587  0876               	movf	___awmod@sign,w
  3030  0588  1903               	btfsc	3,2
  3031  0589  2D8F               	goto	i1l1259
  3032  058A  09F2               	comf	___awmod@dividend,f
  3033  058B  09F3               	comf	___awmod@dividend+1,f
  3034  058C  0AF2               	incf	___awmod@dividend,f
  3035  058D  1903               	skipnz
  3036  058E  0AF3               	incf	___awmod@dividend+1,f
  3037  058F                     i1l1259:	
  3038  058F  0873               	movf	___awmod@dividend+1,w
  3039  0590  00F1               	movwf	?___awmod+1
  3040  0591  0872               	movf	___awmod@dividend,w
  3041  0592  00F0               	movwf	?___awmod
  3042  0593  0008               	return
  3043  0594                     __end_of___awmod:	
  3044  007E                     btemp	set	126	;btemp
  3045  007E                     int$flags	set	126
  3046  007E                     wtemp	set	126
  3047  007E                     wtemp0	set	126
  3048  0080                     wtemp1	set	128
  3049  0082                     wtemp2	set	130
  3050  0084                     wtemp3	set	132
  3051  0086                     wtemp4	set	134
  3052  0088                     wtemp5	set	136
  3053  007F                     wtemp6	set	127
  3054  007E                     ttemp	set	126
  3055  007E                     ttemp0	set	126
  3056  0081                     ttemp1	set	129
  3057  0084                     ttemp2	set	132
  3058  0087                     ttemp3	set	135
  3059  007F                     ttemp4	set	127
  3060  007E                     ltemp	set	126
  3061  007E                     ltemp0	set	126
  3062  0082                     ltemp1	set	130
  3063  0086                     ltemp2	set	134
  3064  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     62      70
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awmod

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___ftneg
    ___awtoft->___ftpack

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7055
                                             54 BANK0      8     8      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             40 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      98
                                             24 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2100
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2694
                                             27 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1812
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0     402
                                              7 COMMON     2     2      0
                            ___awmod
                     _disableCCP1Out
                      _enableCCP1Out
                         _finishNote
                           _lightLed
                         _waitTimer2
 ---------------------------------------------------------------------------------
 (4) _waitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lightLed                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _finishNote                                           0     0      0       0
                     _disableCCP1Out
                         _disableLed
 ---------------------------------------------------------------------------------
 (5) _disableLed                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _disableCCP1Out                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _enableCCP1Out                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___ftneg
     ___ftmul (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack

 _isr (ROOT)
   ___awmod
   _disableCCP1Out
   _enableCCP1Out
   _finishNote
     _disableCCP1Out
     _disableLed
   _lightLed
   _waitTimer2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      46       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      53      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      53      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Dec 11 20:58:30 2015

                      pc 0002              __CFG_CP$OFF 0000             ___ftadd@exp1 0047  
           ___ftadd@exp2 0046             ___ftadd@sign 0045                      l131 0462  
                    l125 03DA                      l128 0400                      l409 02C5  
                    l385 0530                      l386 0538                      l378 051D  
                    l469 04D0                      _PR2 001B             __CFG_CPD$OFF 0000  
                    u965 04FF                      u985 0518                      _isr 0004  
       _last_pin_touched 0064             ___awmod@sign 0076                      wreg 0009  
                   l1201 052A                     l1311 029B                     l1303 027E  
                   l1321 02B7                     l1313 02A0                     l1331 02E9  
                   l1323 02C1                     l1315 02A4                     l1341 0304  
                   l1309 0291                     l1191 0504                     l1271 059F  
                   l1327 02D7                     l1351 0333                     l1193 0509  
                   l1185 04F3                     l1281 024E                     l1441 04E1  
                   l1409 047C                     l1291 0264                     l1435 04C7  
                   l1427 04AC                     l1189 04FA                     l1285 0255  
                   l1381 03A0                     l1373 038C                     l1357 0349  
                   l1437 04D3                     l1429 04BA                     l1199 0522  
                   l1385 03A8                     l1369 0384                     ?_isr 0070  
                   u1005 0525                     u1045 053F                     u1325 02A5  
                   u1265 027F                     u1505 03AF                     u1425 0355  
                   u1355 02B8                     u1435 0365                     u1605 04C8  
                   u1295 0292                     u1455 038D                     u1465 0393  
                   u1545 0483                     u1495 03A9                     u1575 04AD  
                   i1l63 05DC                     _TMR0 0015         _selected_cps_pin 005E  
                   _main 03D0             ___ftpack@arg 0020             ___ftpack@exp 0023  
                   fsr0l 0004                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0209                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0036             ___ftmul@sign 0037             ___fttol@exp1 0055  
           ___fttol@lval 0051                    ??_isr 0077                    ?_main 0070  
        __end_of___ftadd 031C            __CFG_WDTE$OFF 0000          __end_of___awmod 0594  
        __end_of___ftneg 05DA          __end_of___ftmul 03D0                    _T1CON 0018  
        __end_of___fttol 04EA                    _T2CON 001C                    i1l122 0205  
                  _TMR1H 0017                    _TMR1L 0016                    _TRISA 008C  
                  _TRISC 008E           __CFG_FCMEN$OFF 0000            ___awtoft@sign 002D  
          ___ftpack@sign 0024                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 020B             __end_of_main 0463                   ??_main 0056  
          ___fttol@sign1 0050                   i1S1763 05B6                   _CCPR1L 0291  
       __end_of___awtoft 05B6                   _ANSELA 018C                   _ANSELC 018E  
       __end_of___ftpack 054F                   _T1GCON 0019                   u110_25 0569  
                 i1l1233 0559                   i1l1251 057E                   i1l1245 0566  
                 i1l1237 0560                   i1l1247 0572                   i1l1255 0587  
                 i1l1503 008B                   i1l1521 00BE                   i1l1505 0090  
                 i1l1259 058F                   u112_25 0578                   i1l1613 01DB  
                 i1l1541 00FD                   i1l1525 00CE                   i1l1607 01C7  
                 i1l1543 0101                   i1l1527 00D3                   i1l1519 00BA  
                 i1l1471 003B                   i1l1609 01CB                   i1l1449 0010  
                 i1l1617 01DF                   i1l1571 0159                   i1l1563 0140  
                 i1l1547 0111                   i1l1619 01EE                   i1l1475 004B  
                 u113_25 057F                   i1l1565 0144                   i1l1549 0116  
                 i1l1477 0050                   i1l1469 0037                   i1l1591 0197  
                 i1l1761 01E4                   i1l1593 019D                   i1l1585 0183  
                 i1l1569 0154                   i1l1497 0077                   i1l1587 0187  
                 i1l1499 007B                   u170_25 009A                   u172_25 00C9  
                 u164_25 001A                   u181_25 0192                   u173_25 00DD  
                 u182_25 01A7                   u166_25 0046                   u175_25 010C  
                 u167_25 005A                   u184_25 01D6                   u176_25 0120  
                 u169_25 0086                   u178_25 014F                   u179_25 0163  
                 _OSCCON 0099           __CFG_PWRTE$OFF 0000                ??___ftadd 0041  
              ??___awmod 0074                ??___ftneg 003B                ??___ftmul 002E  
              ??___fttol 004C         __end_of_lightLed 05E6          ___awmod@divisor 0070  
        ___awmod@counter 0075    ___ftmul@f3_as_product 0033    __end_of_enableCCP1Out 05EF  
__end_of__initialization 0222               ___ftadd@f1 003B               ___ftadd@f2 003E  
             ___ftneg@f1 0038               ___awtoft@c 0028               ___ftmul@f1 0028  
             ___ftmul@f2 002B               ___fttol@f1 0048           __pcstackCOMMON 0070  
           __pidataBANK0 05DF           _OPTION_REGbits 0095               __pbssBANK0 005E  
             __pmaintext 03D0               __pintentry 0004                  _CCP1CON 0293  
              ?___awtoft 0028                ?___ftpack 0020               _disableLed 05E6  
__size_of_disableCCP1Out 0003               _finishNote 05C4                ?_lightLed 0070  
    _threshold_frequency 007B                  ___ftadd 0226                  ___awmod 054F  
                ___ftneg 05D1                  ___ftmul 031C                  ___fttol 0463  
             ??___awtoft 002B               ??___ftpack 0025                  __ptext1 0463  
                __ptext2 05D1                  __ptext3 031C                  __ptext4 0226  
                __ptext5 0594                  __ptext6 04EA                  __ptext8 05DA  
                __ptext9 05E3                _T1CONbits 0018             __size_of_isr 0205  
       ___awmod@dividend 0072     end_of_initialization 0222            _new_frequency 0079  
             ??_lightLed 0070               _waitTimer2 05DA              ?_disableLed 0070  
              _PORTCbits 000E         __CFG_FOSC$INTOSC 0000                _TRISCbits 008E  
            ?_finishNote 0070               _step_count 0060              ___ftmul@exp 0032  
    start_initialization 020B           _disableCCP1Out 05E9    _MAX_STEP_SOUND_LENGTH 0062  
            __end_of_isr 0209      __size_of_disableLed 0003              ?_waitTimer2 0070  
            _CCPTMRSbits 029E      __size_of_finishNote 000D              __pdataBANK0 0062  
 __size_of_enableCCP1Out 0003   __end_of_disableCCP1Out 05EC        __size_of___awtoft 0022  
      __size_of___ftpack 0065              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lightLed 0003                 ?___ftadd 003B  
               ?___awmod 0070                 ?___ftneg 0038                 ?___ftmul 0028  
               ?___fttol 0048              _CPSCON0bits 001E              _CPSCON1bits 001F  
              __pswtext1 05B6          ?_disableCCP1Out 0070      __size_of_waitTimer2 0005  
          _enableCCP1Out 05EC                 _PIR1bits 0011        main@cps_frequency 005B  
           ??_disableLed 0070             ??_finishNote 0070           ?_enableCCP1Out 0070  
     __end_of_disableLed 05E9         __size_of___ftadd 00F6         __size_of___awmod 0045  
       __size_of___ftneg 0009         __size_of___ftmul 00B4         __size_of___fttol 0087  
     __end_of_finishNote 05D1                 ___awtoft 0594                 ___ftpack 04EA  
               __ptext10 05C4                 __ptext11 05E6                 __ptext12 05E9  
               __ptext13 05EC                 __ptext14 054F                 _lightLed 05E3  
          __size_of_main 0093             ??_waitTimer2 0070                 int$flags 007E  
            _OSCSTATbits 009A               _INTCONbits 000B          ??_enableCCP1Out 0070  
     __end_of_waitTimer2 05DF                 intlevel1 0000         ??_disableCCP1Out 0070  
